(+ (+ (let ((f (* (sub1 -65) (+ (sub1 (* (* -86 -6) (+ -7 -53))) (* (* (let ((m -34) (e m) (y m) (u -79)) y) (add1 -4)) (- (let ((b -99) (z 63) (w z)) 72) (sub1 24)))))) (y (let ((e (add1 f)) (a (+ (let ((h (let ((f (let ((a e) (r 34) (i -9)) f)) (r -31)) f)) (e (sub1 (* -42 f)))) f) (+ 98 (+ (add1 e) (let ((y -99) (u e)) 63))))) (p (+ (* 53 (* (add1 -68) -82)) -24)) (n a) (f (+ (add1 (sub1 n)) (+ (let ((y -56) (d y) (u (add1 -2)) (i (add1 u)) (j 72)) (add1 i)) e)))) e)) (u (* (sub1 (add1 (- -19 (+ y y)))) (sub1 39)))) (sub1 (let ((x 76) (a (sub1 (+ (let ((t f) (z -1) (r x) (n y) (a 15)) z) (let ((n -24) (c -65) (h y) (v 31)) x)))) (n (* (- (let ((m y) (j f) (i m) (o -39) (y -36)) -46) (sub1 96)) -30)) (t x) (s (let ((d (+ (add1 a) u)) (x (+ (+ a -2) (let ((s -29) (z -6) (m f) (a 95)) -44))) (k (let ((z (+ -44 -18)) (k (let ((m 54) (h t) (b 76) (i 13) (a -75)) a)) (v (let ((e z) (a -70) (j e) (c 51) (n 3)) k)) (t (add1 f)) (j (- -68 f))) (add1 -41)))) (let ((b -53) (j (let ((n 71)) -73)) (r (add1 -46)) (y (+ 25 y)) (l -100)) 65)))) -53))) (+ (- (- (let ((k (sub1 (* 31 86))) (m (* (let ((a k) (j 90)) -79) (- k -28)))) (+ (- m k) (* 100 57))) (sub1 (+ (add1 -80) (* -12 68)))) (* (- (let ((z (let ((c 4) (w 84) (u -61) (k -38) (p 72)) 0))) (* z z)) (- (add1 -66) (let ((v 38) (p v)) -65))) (- (sub1 (+ 27 -79)) (sub1 (let ((j 16) (g j) (a -38) (b -47) (x -34)) a))))) (- (- (add1 (let ((y (* 74 -13)) (r (add1 -90)) (w y) (i (sub1 -1))) (+ 79 i))) (sub1 (let ((o (let ((f -37) (i f) (k i) (l k)) l)) (z (sub1 o)) (h (- -58 z)) (l (+ -95 z))) (let ((a 45) (n h) (s a)) s)))) (let ((n (let ((n (add1 (+ 57 -35))) (w (sub1 (let ((e -23)) e))) (p -53) (f (let ((j (* -27 w)) (p (* -5 33))) (sub1 17)))) -48))) (add1 (let ((j (* 98 -51))) (* 77 45))))))) (sub1 (+ (- (* (- (* 1 (add1 71)) (let ((n (let ((a -1) (b a)) 92)) (g (add1 n)) (a (- 30 76)) (d (- a 78)) (c (add1 n))) (+ c d))) (let ((r (+ (- -71 -63) (sub1 44)))) (add1 (+ 67 -81)))) (+ (sub1 (- (* 38 -45) -27)) (sub1 -28))) -31)))