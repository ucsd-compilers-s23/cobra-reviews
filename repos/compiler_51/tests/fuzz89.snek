(- (add1 (add1 (let ((f (let ((w 78) (g w) (r 82)) (add1 (- (+ -48 -1) (- (- (+ (+ (* (+ r (sub1 (let ((q -22) (y -97)) q))) (- (add1 (let ((l 11) (r 94)) -62)) (add1 (* r g)))) -8) (sub1 (+ (let ((e (- (* w -98) (+ r 25))) (i (* (+ -41 64) (add1 g)))) (let ((p (sub1 99)) (z (let ((n 38) (q -27)) e)) (f (+ z 1)) (s (- p w)) (c (* -39 w))) (+ g 99))) (add1 (let ((u (+ g 61)) (v (+ g 88)) (f u) (h (sub1 r))) (- r -87)))))) w) (add1 (let ((l (* (add1 (* r (sub1 -56))) 25))) g))))))) (t (* (+ -81 f) -60)) (q f) (c (+ -54 (+ (add1 f) -22))) (m (sub1 (- q 24)))) (- (- (* (add1 -26) 14) (let ((h c) (g 88) (m (- (add1 -56) (+ (add1 (- (- (let ((b (add1 (add1 h))) (m (- (- -73 m) (+ 34 g))) (y (* (add1 79) (let ((i g) (p 41) (v -95)) p)))) (add1 (* q -28))) q) m)) h)))) 98)) (let ((a (+ (add1 (* (add1 (add1 (+ -54 10))) (* (let ((v (let ((q (- (* (- f m) (add1 q)) (* (* 29 -61) (sub1 q)))) (d -71) (i (add1 74)) (n (let ((p (let ((z (- d -22))) (- f 95))) (w q) (q (- c (let ((i d)) -12))) (h (let ((j (add1 -64)) (h (let ((p 71)) f)) (w (* p -32)) (r (- q j)) (n (* -6 -64))) (- i j))) (g -72)) (- (- 39 80) (sub1 i))))) (let ((f (sub1 (- d -49))) (c 0)) (* (* 58 m) (sub1 d))))) (r (+ (- (let ((i (+ 10 c)) (f -96) (o i)) (sub1 v)) (- (sub1 -43) (+ c f))) q))) (- (sub1 -19) (* (add1 (sub1 -59)) (let ((g v) (r g) (m (add1 -36))) (add1 58))))) 86))) (let ((m m)) (add1 (- t (sub1 (sub1 (add1 (let ((a (sub1 -75)) (k (add1 91)) (b a)) c))))))))) (p (* m -41)) (z (- (add1 t) (sub1 (+ -24 (add1 (add1 q))))))) (* -32 (- (let ((c (- (add1 -71) p)) (k 5) (t (sub1 p)) (h (- c (+ m (- (let ((t (let ((g (let ((k z) (z 82)) 31))) (+ t -71)))) (+ (sub1 k) -26)) (* (+ 55 (sub1 78)) p))))) (g (let ((o (* (- -44 -49) (- (* (add1 (add1 -73)) (+ (sub1 81) -71)) (add1 c))))) (sub1 (sub1 15))))) (sub1 (sub1 -72))) (let ((n (- (let ((y (sub1 (let ((x (sub1 (+ 49 -35))) (v (add1 99)) (c -32)) 4))) (w (add1 (- (sub1 (* a 31)) (- (+ t f) (add1 m))))) (f (sub1 3)) (k -95) (a (+ (add1 (let ((r (* -59 -99)) (y (- -6 z)) (s (add1 y))) (add1 t))) (let ((b (sub1 (+ c 14))) (q t) (u -60) (h (+ (let ((m c) (k -24) (o 14) (v 90) (h -10)) -35) (- z p)))) (- (- 99 t) (add1 -66)))))) (sub1 -73)) (add1 (let ((l (add1 (add1 (sub1 c)))) (h (- (+ a (add1 27)) (- (add1 p) (+ -31 -46)))) (o (* -30 (+ (+ -52 89) (add1 c)))) (s (- (- t (add1 l)) (sub1 (+ z f))))) (let ((o 99) (l -81) (v t) (y h) (z (+ -8 (let ((k 36) (r -75) (s 12) (h 75) (x 29)) r)))) 43))))) (h (+ (- (sub1 (add1 52)) 40) a)) (o (+ 70 (- (sub1 -49) (add1 (+ (- (let ((y 36) (j h) (v a) (u -24)) z) (let ((r f) (d h)) f)) (+ (let ((o z) (c 52) (n p) (s o)) -69) (sub1 -61))))))) (w (sub1 (* (+ (- -17 76) (let ((m (+ a (* -94 -36)))) h)) -11)))) (add1 (- (let ((g (add1 (+ (- -8 -4) (let ((n m) (v 50) (m -73)) 22)))) (s 21) (z (let ((d (add1 (let ((z a) (q q)) -95)))) (+ (- m 32) (let ((j -29) (v p) (g 20) (b 88) (k -95)) o)))) (m (+ (- (- 45 92) (* -87 c)) (add1 (* 23 -28))))) (+ (- 63 81) (* (sub1 12) (+ g 25)))) 82)))))))))) (+ (+ (add1 (- (- (+ -26 (add1 (sub1 (sub1 (sub1 (- (- (* (* 4 -40) -54) (sub1 (let ((q -89) (z 83) (c q) (g z) (w z)) 4))) (let ((k (add1 (+ 83 45))) (j (add1 -72)) (q j)) (- (+ -24 k) (+ q -65))))))))) (sub1 (- (- 76 -73) (+ (- (add1 (sub1 (add1 (* (* 71 -22) (add1 85))))) 84) (sub1 (sub1 (- (add1 (+ (+ -77 -87) (* -86 -11))) (* (* (let ((p -61) (l p) (g -69) (h 87) (z g)) 92) (- -43 9)) (* 21 (let ((t -48) (a 36) (r 82) (p r)) r)))))))))) 14)) (add1 (- (+ (+ (add1 (+ (sub1 (- (- (+ (let ((q (* 83 56)) (s (- q -88))) (let ((m 58) (v m) (u v)) -28)) (- (- -67 -16) (+ 39 92))) (sub1 (sub1 -47))) (- (let ((t (let ((x (let ((q -75) (s q) (d -48) (e 52)) e)) (t (- x x)) (p (+ x 35)) (a -88) (s -91)) (add1 -94))) (k (* (sub1 -56) (- -98 -87))) (j (add1 t)) (i 14) (p (let ((w (sub1 i)) (z (sub1 k)) (t (let ((z 27) (t k) (m k) (j 30)) m)) (v (add1 j)) (y (+ v v))) (* 6 61)))) (* -7 (sub1 13))) (let ((q -73) (t q) (y (- (let ((k q)) -30) (+ 68 89))) (p (add1 t)) (s (let ((l (+ 94 -63)) (f 41)) t))) (* (sub1 52) s))))) -99)) (let ((i (* (let ((i (sub1 (- (* (* (+ 95 36) (let ((q -40) (c 49) (z 51) (k z)) 78)) (sub1 (* 66 -71))) (+ (* (* 99 61) (sub1 -78)) (* (add1 -28) (+ -10 -96)))))) (w (let ((i (let ((x (+ (let ((f 63) (y -26) (j (let ((r -55) (w -52) (j w)) 22)) (e (* -61 y)) (w y)) (- -52 18)) (sub1 (+ -94 i)))) (k (- (- (- x -71) (- x 84)) (add1 (+ i 94)))) (s (+ x 49)) (l i) (e (- (add1 (let ((m -5) (y 12)) x)) 15))) -70)) (n (add1 i)) (j (* -38 (add1 (let ((d (sub1 n)) (n (sub1 26))) -18))))) -45))) 23) (sub1 (- -72 58)))) (y (+ (* (let ((j i) (c (add1 (* (add1 -46) i))) (y (+ c (- j (- i (* j 87)))))) (let ((g (sub1 (add1 (let ((i j) (w i)) j)))) (d (sub1 i)) (j (let ((a (+ (let ((a d) (w d) (m -69) (n -43)) 59) (- 12 c))) (t 96) (p g)) (let ((q (let ((b -41) (j 63)) -1)) (l (let ((b -32) (k p)) 20))) (* -22 t)))) (f (add1 (sub1 (- j y))))) (sub1 (add1 (+ 59 15))))) (* (add1 (* (- (- 9 -6) (add1 i)) (let ((k (sub1 -11)) (o (add1 k)) (j 34)) (- 100 o)))) 63)) i)) (b y) (d (- (* (add1 (- (sub1 (+ (- 32 90) (add1 b))) (add1 b))) (- (* (+ (+ 64 (add1 -100)) (add1 (let ((l i) (m l) (g -76) (o y) (t -48)) -33))) (let ((d (let ((h (sub1 y)) (i (sub1 17)) (a (let ((c -56)) c))) (- h h)))) i)) (add1 (add1 (+ (add1 -82) (add1 i)))))) (add1 (+ (* (sub1 (* (add1 -86) i)) 3) -100)))) (x (add1 91))) (+ (sub1 (+ b (let ((j (+ (- (let ((q b) (t d) (d 60) (c i)) -95) (+ i x)) (add1 (sub1 d)))) (h (- (let ((j (let ((j i)) d)) (c x) (h (sub1 54))) (add1 h)) (sub1 (sub1 d)))) (m (- (* (let ((n j) (f b)) 21) (sub1 -20)) d)) (k m) (n (+ (add1 x) (let ((v -67)) (* 75 i))))) (add1 (- (let ((u b) (k 86) (m b) (e -63)) m) (sub1 b)))))) 32))) (let ((v (+ (* (add1 (- -80 (let ((x (add1 (- -50 (- 38 20)))) (a x) (y (* (+ (sub1 a) (+ 33 -89)) (add1 x)))) (- (add1 (+ x -77)) (add1 (add1 y)))))) (- (let ((q (+ -29 (sub1 (- -73 -80)))) (l (- (add1 (let ((b (let ((t 52)) q)) (a (* -52 -54)) (j (+ a q)) (v (sub1 -89)) (y (- -72 q))) (let ((s 66) (v y) (q -73)) s))) q)) (a (+ (let ((g (let ((u (+ 17 l)) (y (+ u -8)) (j (add1 -32)) (c (let ((i u) (w y) (z l)) u)) (z (- 33 u))) (let ((r 13) (v -59) (z u) (f c) (q u)) -25))) (d (add1 l))) (* (let ((r 85)) d) q)) (- (let ((n (+ 53 q)) (z (- n q))) (+ -6 z)) (let ((o (add1 q)) (k (- -71 o)) (l o) (s (+ 42 k)) (h (* l k))) (add1 o))))) (h (let ((x (add1 a)) (n (* (- a (- q x)) 42)) (c (* (let ((u (- x a)) (j (sub1 -9)) (b (- -58 83)) (d b) (a (add1 37))) (+ u 63)) -11)) (d (add1 -11))) (add1 (sub1 (- q -62)))))) (sub1 -48)) 21)) 79)) (z (add1 41)) (a (+ (sub1 (let ((u (add1 (* (- (add1 (+ v v)) (- (+ z z) (- -80 64))) 43))) (j (sub1 (add1 -79)))) (- (add1 (+ (* (+ -35 v) -65) (+ (add1 -97) (+ v 65)))) (sub1 (sub1 u))))) (sub1 -71))) (p -61)) 95)) (let ((j (let ((b (- (add1 -41) (- (let ((s (add1 (let ((i (- (add1 (add1 -34)) 63)) (b 74) (o (let ((l b) (s (add1 (add1 b)))) (add1 (sub1 63)))) (q i) (e (+ (+ i (add1 -89)) (add1 91)))) (+ (let ((a e) (g (sub1 i)) (i (sub1 30)) (x 27)) (+ e -15)) (+ (+ o o) (let ((j b) (m -77) (l -31) (a 56)) 67)))))) (r (- (let ((q (+ (* (+ 78 -24) 34) s)) (j (let ((e (let ((n -98) (c (let ((o -1)) o)) (s (add1 s)) (x 88) (h c)) (sub1 s))) (h q) (u 96) (g (* (let ((a h) (w h)) 58) u))) (* (add1 u) (sub1 -30)))) (i q) (r (- (+ -38 (- -58 54)) (add1 -11))) (h q)) (* r s)) (sub1 (sub1 (- (+ -23 9) (+ -49 s)))))) (d -22) (t -2) (x (add1 (let ((x (+ (- s (add1 r)) (sub1 d))) (v (sub1 (sub1 (* x 78)))) (e (+ -71 (let ((q (add1 -75))) t)))) (add1 (sub1 (* -70 e))))))) (+ (sub1 x) (add1 (sub1 (let ((v (add1 21)) (g (- 45 r)) (u -72) (n (sub1 -76)) (z s)) (sub1 70)))))) (+ (- (* (+ (- (sub1 27) (- 37 -31)) (let ((c (- -45 -69))) (- c -76))) (add1 (add1 (add1 2)))) (* (sub1 (sub1 (add1 -70))) (let ((y (+ (- -28 -87) (sub1 -49))) (c (add1 (* 45 y))) (p (let ((e c) (d (* c -10)) (m (* c e)) (h c)) (- m 60)))) -75))) (- (sub1 (+ (let ((x (sub1 -26)) (u (* -80 x)) (n (* -88 90)) (o (- u 29)) (f -1)) (- -31 u)) (- (sub1 -85) (sub1 -20)))) (* (- 4 (* -96 (let ((a -91) (e 56) (j 86) (g j) (c -46)) e))) (- (+ (sub1 -55) (- 70 -2)) (+ (+ -29 32) (let ((y -48) (b y) (r 69)) -58))))))))) (t (+ (add1 (sub1 66)) 51)) (w (sub1 (- (* (sub1 -30) b) (sub1 (+ (* (+ (add1 (add1 b)) (+ (* t 6) (* 38 -77))) (let ((n (add1 24)) (u (let ((s (+ b -20)) (y (* 81 -75))) (sub1 n))) (l (+ (+ n -52) (let ((r 41) (o u) (k -88) (m 36) (s -13)) 95)))) (* (- n u) (* 65 -6)))) (sub1 t))))))) t)) (t (* (- (+ j (* (- (+ j (let ((y (add1 (+ 29 93)))) (- (- 11 y) (sub1 y)))) j) (add1 (+ (let ((v (let ((t (let ((b j) (e -26) (j b) (k e) (a -12)) j))) (* t -27))) (a -64) (u a) (m (* -57 6))) (add1 (sub1 -57))) (add1 (sub1 (- -33 -7))))))) (let ((g (- (* (sub1 j) j) (sub1 (+ 19 j))))) (sub1 (+ (- (sub1 (+ (- 10 -29) (sub1 99))) (add1 (add1 66))) (sub1 (sub1 g)))))) j))) (add1 (- 66 25)))))) (add1 (+ -77 (+ (add1 (sub1 (sub1 (let ((z (* (add1 57) 48)) (v 18) (r v) (c -68) (j -55)) 73)))) (add1 (add1 (let ((q (sub1 (add1 (* (* (add1 (+ (- 59 -80) 5)) 37) (sub1 -50))))) (a -37) (t (+ q (- -26 -96))) (d t)) (let ((u (add1 (let ((u (+ (- (sub1 (let ((k 52) (y a) (q 44)) q)) (let ((f (let ((n d) (d -38)) d)) (v -6) (y (add1 t))) (+ -25 63))) (+ (sub1 a) (let ((o (+ -6 t)) (c (add1 t))) (+ 40 84))))) (v (+ t (sub1 (* (add1 t) (add1 46))))) (a (add1 (add1 (- (- a -39) (+ d -64))))) (m -9) (k (sub1 (add1 m)))) (add1 (let ((l (+ (- -88 -85) u)) (u (+ (sub1 l) (add1 u)))) (add1 (* l 72))))))) (e (- (let ((e (- u u)) (z (- (add1 (+ a (sub1 q))) (sub1 (add1 e))))) (let ((z t) (b 58) (e u)) (let ((i b)) q))) u))) t)))))))))