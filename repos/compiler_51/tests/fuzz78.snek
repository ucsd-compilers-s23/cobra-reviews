(let ((y (+ (* (sub1 (let ((b (let ((e (+ (+ (add1 (+ (add1 (let ((d (- 68 8)) (f (+ d 92)) (n 81)) (let ((r -81) (k 62) (z -93) (j -9) (c -61)) f))) (+ (+ (sub1 18) (* 65 -87)) (sub1 (+ 33 58))))) 81) (sub1 (+ (let ((a (+ (sub1 (- -49 96)) (let ((g (sub1 6)) (c (- -56 g))) (sub1 c)))) (k (+ (let ((l -86) (z (+ a l)) (y (add1 59)) (p 81)) a) (- 82 (- 57 44)))) (w (+ (- a (- -17 -98)) -48)) (d (* (sub1 (let ((z -98)) z)) -88))) (sub1 (+ (* a a) 50))) (+ -9 (- -45 (let ((m (+ -86 -76)) (y (+ -94 m)) (e (add1 -100)) (x (let ((n e) (p m) (v e)) -86))) 59)))))))) e)) (s (- (- (- (+ b (add1 (add1 (- (let ((h 57) (y -2)) h) (+ b b))))) (let ((l (sub1 (+ 19 (add1 (let ((o b) (t 23) (c b)) o)))))) (+ (let ((e (- (- 15 -13) 24)) (b -83)) (let ((a (sub1 21))) (+ -67 22))) (let ((q (add1 l)) (k (+ (* b b) (+ 38 l))) (s (- (* b 23) (add1 k)))) (* (let ((b k) (g b) (n -53) (o -14) (d q)) -50) (sub1 b)))))) (add1 (sub1 11))) (let ((e (add1 (- (sub1 (sub1 b)) (+ (+ (let ((a 39) (y (* 87 a)) (g 69)) (let ((q -66) (p 64) (b q) (g 61)) a)) -50) (let ((l (sub1 (add1 b))) (q (sub1 (add1 0))) (x (let ((v (+ 10 76)) (u (sub1 b)) (d 72) (o (- b -79)) (x o)) (sub1 44))) (n (- (* 99 14) (sub1 x))) (o (add1 (- x -85)))) x))))) (t (- (+ (+ (let ((t (- (let ((b b) (j e) (t -40) (d -48)) -72) (- b -92))) (c (add1 (* 74 t)))) (* 89 (sub1 85))) (+ b 25)) (sub1 (+ (+ (let ((b 63) (u -7) (a u) (g 41) (l 48)) 68) (let ((h -87) (z h) (x 60) (a b)) h)) (let ((i (let ((u 77) (z -52) (p 100)) 75)) (y (- -50 38)) (x (let ((m -78) (h b) (v 86)) -11)) (m (add1 30)) (d -28)) -59)))) (let ((x (sub1 (let ((n (* 22 (- -83 b))) (l (- (add1 b) (let ((j -79)) -4))) (u b) (k (sub1 b))) (- (sub1 n) (let ((a b)) -31)))))) (sub1 (+ e x))))) (l (sub1 (- (+ (add1 (* 59 (let ((x t) (q -54)) -57))) (add1 (- (* b b) (sub1 -10)))) e))) (v -69)) (add1 (+ e t))))) (g (+ (+ (let ((r (add1 92)) (s (* b 94)) (t s)) b) (sub1 b)) (let ((v (let ((d 8) (b b) (s (let ((y (* (* -51 (sub1 (add1 11))) (add1 (add1 (sub1 -7))))) (m (+ (* (sub1 38) (+ (* y 25) (* -19 y))) (sub1 (- (sub1 -61) (let ((y s) (m 36) (s -17)) b))))) (p (add1 (let ((g (let ((f (let ((a s) (d 15) (z 38)) -88)) (a f) (j (* 89 77)) (q (let ((z d) (p z) (d j)) 57))) -52)) (i y) (b (- (* g b) d)) (t (sub1 (let ((v b) (u g)) v)))) (let ((b (+ 6 41))) (- y y))))) (i (let ((d (* (* (- p -59) (sub1 p)) b))) (+ (add1 57) s))) (n (* 13 (add1 (- (- -87 p) (let ((e y) (i p) (o 16) (a 10)) -41)))))) (let ((e (+ (+ (+ p i) s) (let ((b (+ p p))) (add1 91)))) (n (sub1 23)) (v (sub1 (add1 (add1 d))))) (* 21 (+ (add1 -10) (let ((f m) (g -37) (r 39)) -76)))))) (v (* b (- (add1 (* d d)) (- (add1 (add1 s)) (add1 (sub1 s))))))) s))) (sub1 -45)))) (c (sub1 -6))) (* -36 s))) (let ((h (- (let ((c (sub1 (let ((f (let ((v (- (- (+ -3 (- -70 2)) (+ (+ -80 -40) (+ 39 72))) 6)) (s (- -9 (- (* (* 63 -52) (- -90 v)) -94))) (x (- (add1 (add1 (* 99 8))) v))) (sub1 (* (let ((k (add1 s))) -95) (add1 (+ v v)))))) (g (let ((b (+ (+ (+ 67 f) -86) (+ (let ((t (let ((l 65) (v -35) (i 75)) -56)) (y f) (i (sub1 -99)) (e (let ((q -37) (v -45) (u v)) -39)) (h (let ((p -35) (n p)) y))) (* -97 -70)) 89)))) 99)) (p f) (t -50) (z (add1 (- g (- (add1 (* f f)) (+ -44 (add1 f))))))) t)))) (add1 (let ((n (* (- (add1 (let ((e (add1 c)) (o (* c 48)) (v e)) (let ((h o)) h))) (sub1 c)) (add1 c))) (h -74) (a (add1 (* (sub1 (let ((l (* 31 c)) (h (sub1 37)) (w (+ n -54)) (y (+ -83 94)) (g -88)) (sub1 3))) (sub1 (+ n (+ n c)))))) (b (add1 (let ((q (* -39 (+ 85 (sub1 -41))))) (+ (sub1 -66) a))))) 8))) (add1 (+ (- (add1 (- (let ((i (sub1 (- 9 -7))) (v (* (* -42 i) i))) (let ((i (* 19 -10)) (w (sub1 v)) (r v) (j (add1 v))) (- 7 w))) (* 8 (* (sub1 55) (let ((a -95) (e a) (u -94) (q e)) 95))))) (let ((e (- -85 (sub1 (sub1 (sub1 79))))) (l e)) (sub1 (let ((t 8) (n e)) (let ((p (let ((k n) (e k) (w -46) (c n) (r n)) c))) (+ p l)))))) (* (* (+ (+ (* (* -28 35) (* 10 -45)) (* (* 81 -58) (- -41 -14))) (add1 (- (sub1 23) (- -89 72)))) (let ((p (sub1 (+ (- 89 64) (add1 -29))))) (+ p (add1 p)))) (sub1 (let ((z (+ (let ((i (sub1 -22)) (y (add1 -12)) (k -86)) (- -91 i)) -51))) (sub1 z)))))))) (d (sub1 (let ((g (add1 (+ (let ((b (+ (let ((k 59) (t -76) (m (let ((d (sub1 -60)) (p (* 64 k)) (f t) (b (let ((c h)) p))) (- -12 f)))) t) (- (add1 (- h h)) -28))) (n (+ (- (- 96 (- 32 h)) (- (* 95 77) (add1 h))) (+ (sub1 (add1 -41)) (add1 h)))) (a (let ((x (sub1 (+ (sub1 n) (add1 -29)))) (b (add1 (add1 (* 3 31)))) (n (+ -59 (add1 79))) (z (+ (* (- 0 -89) (+ b b)) (+ (* n n) b)))) (let ((r (add1 (+ b b))) (u (* (add1 37) -2)) (f x)) (* -28 (add1 -87))))) (o 1)) (add1 h)) (+ (+ 18 (- h 71)) (sub1 (- (add1 (add1 -73)) 53)))))) (j (let ((b h)) (sub1 (let ((v (- (+ 46 (sub1 (* 57 71))) (- (sub1 (- 60 b)) h)))) (- -44 (add1 (let ((v (let ((h 17) (l b)) g)) (g (* -15 93))) (+ 66 39)))))))) (s (+ (add1 (+ (add1 (sub1 (+ (sub1 -16) (+ h h)))) -83)) (add1 (+ j (sub1 (add1 (let ((j (let ((s -60) (l 42) (u l)) g)) (z (add1 -74)) (l 11)) (let ((m 74) (r -90) (z g) (l l) (e -81)) -54)))))))) (e (+ (* 65 (sub1 (sub1 j))) (let ((i (add1 -54)) (y (+ (+ (+ (+ (* 52 55) (+ h 69)) (- (let ((z -32) (s 97) (t g)) i) (+ i 19))) (let ((p -37)) (- (* 21 -1) (add1 -76)))) (+ (let ((p h) (g (sub1 (sub1 i))) (o -9) (j (let ((d -85) (r (let ((z j) (k d) (q -72)) -95)) (j (let ((z 15) (a 61)) i)) (b 100) (s (+ -49 h))) o))) (sub1 (- 59 -50))) (- (+ (sub1 44) (add1 -58)) 0))))) j))) (q (let ((a s) (c a) (t (- (+ (sub1 (+ (sub1 5) (let ((s (+ 88 e))) (+ h g)))) (+ 52 (add1 (add1 (add1 -63))))) 6))) (let ((a (add1 (sub1 (+ (let ((d (+ a -43)) (g (let ((m -72) (c 34) (b j) (g 95)) h)) (i (let ((z -88) (k j) (c j)) e)) (s (add1 a)) (o (- -82 a))) (+ 24 j)) c)))) (k a)) (+ (- (add1 (sub1 (+ -39 -38))) (let ((d -33) (y t) (j (add1 (+ 30 s))) (e 23) (u k)) (sub1 (- h -38)))) (+ e 67)))))) (add1 (add1 (add1 g)))))) (a (add1 (- -9 (* (let ((v (let ((k (sub1 (let ((w 64) (j -43) (f j) (v h)) (let ((c -26) (d -5) (p (let ((x v)) -68)) (b 27) (j (add1 h))) c)))) (d (add1 d)) (e (let ((k (let ((k (- (sub1 h) (- d -56))) (b (- (+ 26 d) (let ((i k) (c -54) (w -80)) -3))) (i b)) (+ 0 (add1 k)))) (q (+ (- (+ k 11) (add1 h)) (sub1 (let ((l 35) (t h)) -16)))) (c (let ((c (- (let ((f 29) (k -75) (r 60) (m h)) r) (+ q -57))) (z q) (g (let ((l (add1 -92)) (o 7) (u d) (g (add1 u))) (+ 57 c)))) -57)) (b (add1 (add1 (+ -39 c)))) (o (sub1 (+ (- 42 70) (sub1 h))))) (+ (+ (- -51 o) 71) (sub1 -26)))) (y (let ((z (sub1 (- (+ -49 -14) (* 14 k)))) (e (add1 (sub1 (sub1 33)))) (k (sub1 (* 58 (let ((o -94) (x e) (c h) (j d)) e))))) (- z (+ (let ((m d)) 77) h))))) 34))) (let ((k v) (i d) (u v) (r (sub1 (- (add1 (add1 43)) u))) (e (* -39 (* (+ (let ((t k) (z k) (n -3) (q -52)) r) (add1 -68)) r)))) e)) (let ((k (let ((p d) (j (add1 (let ((n (- (add1 60) 34)) (u (+ (+ d 98) (- 56 56))) (b (- -86 2))) n))) (q (* (let ((q 16) (e (+ h (add1 q)))) (- (+ q e) h)) (add1 (let ((e (let ((a 73) (d 43) (p -19)) p))) (add1 -64)))))) (sub1 (- (* (sub1 79) 58) (sub1 -24))))) (d (add1 (+ (* (add1 (- 5 -33)) -5) h)))) -89))))) (x (+ (* (let ((s (add1 (let ((s (add1 (add1 d))) (d (add1 (- (add1 (sub1 -45)) (+ (let ((t -89) (g h) (p s)) 42) (+ -99 66))))) (q -82) (f (- (sub1 89) (sub1 -42)))) (let ((j (+ -83 (- (- f -13) 54))) (c (+ (* (+ q -82) (add1 d)) a)) (q (add1 (let ((h (let ((u j) (e -30) (y a) (f a) (g c)) 52)) (d (add1 7)) (i (+ 13 s)) (s 39) (t (* 72 h))) (add1 q))))) -97)))) (l (let ((v (- (sub1 (- d (add1 (- a a)))) (sub1 a))) (j (add1 -93)) (a j)) (+ -45 (let ((a (let ((v (add1 (sub1 -2))) (q (sub1 (sub1 s)))) (- (add1 51) -4))) (h (- (+ 91 (sub1 h)) (- (- a a) a))) (b (* s (let ((b (let ((q 37) (g q) (z j) (i h) (s v)) 58)) (a (let ((a a) (g -87) (w -84) (p -16) (s w)) g))) -43)))) (- (sub1 (- a 71)) (let ((m (- 77 v))) (* s j)))))))) (- (add1 (+ (sub1 (+ (* 22 l) 80)) -63)) 74)) (add1 (let ((p (- d (add1 (let ((l 53) (v a)) (+ (* -60 -63) (let ((w h) (e 16)) a)))))) (u (let ((t (add1 (let ((t d)) (sub1 (let ((j 67) (r 84)) h))))) (x (sub1 (+ (- (add1 -66) (add1 t)) (sub1 (* -48 59))))) (w (let ((h a)) (* (- (add1 h) 40) (+ (sub1 61) (add1 -51))))) (q (let ((h (+ (+ (add1 d) 96) (+ (- -100 x) (sub1 -100)))) (l (let ((l h) (s (- -75 p))) -43)) (k (let ((g (let ((l (sub1 -50)) (w (+ h -1))) (- 30 -36))) (v (+ (- -58 58) (- 52 h)))) (* (add1 -99) (+ -10 89))))) (+ (add1 (+ d p)) (let ((w (let ((h x) (u 80) (l -19) (i 83) (e -87)) t))) (- 60 l)))))) -25)) (y 91) (b (add1 (sub1 p))) (o (- 70 b))) (- (let ((t (let ((a (sub1 66)) (w (- (let ((y a) (e u)) h) (let ((d -48) (g -69) (e 5) (p g) (n -1)) p))) (y (+ (+ -65 b) (add1 32)))) -18)) (h (add1 57)) (f (+ (add1 (* y -45)) (+ (sub1 45) (+ -51 65))))) (sub1 (add1 (add1 h)))) (- (sub1 (sub1 (add1 87))) -59))))) (+ (sub1 (sub1 (+ (add1 (add1 (sub1 h))) (let ((n (- (let ((k (let ((m d)) h)) (b (+ h 21)) (m (+ -69 h)) (s (+ k -29)) (o (add1 m))) (let ((p s) (w a) (h m) (l 93) (m 58)) b)) (- (- 76 h) (- -96 -35)))) (j (sub1 (add1 (+ -13 -100))))) 6)))) (* 84 (* (- -37 (sub1 (+ (add1 -92) (let ((e h)) (add1 55))))) (sub1 (add1 -70)))))))) 38)) (- (add1 -97) 14))) (z (add1 (sub1 (add1 (sub1 -46))))) (w 8) (h 15) (k (* h (let ((p 73) (b (+ (let ((f (sub1 (sub1 (- (sub1 (add1 (* (sub1 (let ((k p) (p -98)) k)) (let ((i (+ 30 -50))) (add1 -77))))) (add1 -83)))))) (add1 (- (let ((m (let ((k y) (n (sub1 (add1 (- w (* h 50)))))) (* (+ (- (sub1 -24) 20) (* p (let ((w -19)) h))) (+ h (* h (sub1 w)))))) (o (let ((d (* (+ (+ f (let ((s h) (v y) (e 36) (d -34) (y v)) w)) (- (sub1 m) f)) (- w -83))) (b (- -14 -40)) (w (+ 87 67)) (r (* (- z (sub1 75)) (sub1 (* 13 w)))) (o (+ -69 (* (- (- -54 r) w) (- f (sub1 58)))))) -38))) (add1 (sub1 (+ (add1 (add1 62)) (* (sub1 -64) m))))) (+ y (+ (* z (- (* (+ 13 38) -1) (add1 (- -34 26)))) (let ((p (+ (let ((b (add1 f)) (r (let ((x -60)) 77)) (j (let ((q -34) (x p) (z y) (f p) (s -47)) -77))) (let ((s h) (w 78) (l p)) 89)) (let ((b y) (o (+ 40 f))) 90))) (d h) (g (* (let ((y (- -5 88)) (g 18)) (add1 z)) (+ (add1 f) (add1 h)))) (c (* (sub1 f) (sub1 57))) (v (sub1 (- g (sub1 f))))) (- (add1 (* -70 z)) (+ h -99)))))))) (- (add1 (sub1 51)) (- z (let ((z (- p w)) (e (* (* (* (- (sub1 (let ((o y) (q p)) 64)) (sub1 (* w -50))) 99) (add1 (add1 (+ -74 (let ((f -88) (s 92)) 80))))) (let ((t w) (h (let ((c w) (f y)) 41)) (i 79)) (+ -1 (- (+ (add1 h) t) (sub1 -94)))))) (v w) (h (+ (let ((m h) (a (sub1 (sub1 (* 23 (sub1 w))))) (r (let ((t (* (- (add1 -4) -88) (let ((l (add1 p)) (b v) (y (* h -30)) (z (sub1 v)) (n (* b 42))) (- -66 n)))) (i (add1 (add1 (+ 37 z)))) (v w)) (* (sub1 v) (let ((x (+ -94 v)) (z (- -15 -63)) (t t) (q (* v v))) (add1 -5))))) (s (- -60 (let ((r -90)) (add1 r)))) (e 36)) (+ (* (let ((q (let ((q e)) -87)) (i (let ((y a) (n -78) (h r)) 75)) (e (* 13 -56))) (+ i i)) (* (+ 92 34) (- 53 12))) (let ((z (* (- 96 m) (let ((f a) (j a) (d -33) (x 34) (w a)) -17))) (a (- (* 77 z) (+ z m))) (m m) (k (- (let ((s -8) (m v) (o e) (f z)) v) (+ -84 h)))) 52))) (+ (add1 (let ((r (add1 v))) (+ (add1 -17) (- p -41)))) 8)))) (* p h)))))) (g (sub1 (let ((c (- w y)) (q (let ((u 99) (b (- (let ((p (* (- (sub1 (- (* 98 u) (sub1 -100))) (+ 65 36)) -98))) -84) (let ((a -70) (w y) (m (- (* 91 49) -22)) (f (let ((e (- (add1 (sub1 (+ p y))) (sub1 80))) (n (* (sub1 (let ((t (let ((h w)) 20)) (e (- e -13)) (a (add1 -7))) (- 64 76))) (+ (sub1 (sub1 e)) c)))) (add1 (- u (+ (- 72 a) p)))))) b))) (n (+ -78 (sub1 (+ (* -97 (sub1 -76)) (* (add1 (add1 (* z 63))) (let ((u h) (n (+ (+ y 7) -76)) (w (- b (sub1 -12))) (c (add1 (+ -8 15))) (h 56)) (sub1 (let ((w b)) p)))))))) (w (sub1 40))) 87)) (v (+ (let ((e (sub1 (- (add1 29) (add1 (* (+ (sub1 h) (let ((h y) (u 14)) 98)) (+ (* h 9) (* 43 12))))))) (d (+ (- (let ((t (- (add1 (sub1 e)) (* (let ((m 67) (z w)) e) (sub1 -73)))) (h (sub1 (+ (* e h) (- -7 77)))) (g (* (sub1 (+ -69 w)) (sub1 (* 34 z)))) (u 67) (q -94)) (add1 -87)) (add1 (+ (let ((k (let ((m e) (h e) (e 8) (i 83) (t -63)) t)) (d (+ e 29)) (o p) (u (- 19 20))) -79) h))) (* (let ((p (let ((h (- (- p p) (add1 15))) (m (add1 (add1 -67))) (a 4) (n (let ((w (* 16 h)) (r (+ c 99)) (a (let ((p w) (x -16) (i -59) (w y) (h -10)) 43))) (add1 b))) (t -50)) (let ((v (* -86 -83)) (q (add1 t))) h)))) (let ((e (let ((n (- p 95)) (u 16) (v 26) (a (* -41 u))) (let ((h 40) (c z)) 30))) (g (- -12 (sub1 -49)))) z)) (let ((e (sub1 (sub1 (- q c)))) (l (+ (+ -8 (* z h)) (sub1 (let ((i y) (q z) (e -8)) i)))) (y (sub1 (sub1 (let ((y 67) (q 80)) 7)))) (o -57)) (* (sub1 -18) (* (- o -47) (+ -91 33))))))) (u (* (- z 75) (add1 (sub1 (- (- (* -88 -34) 35) w))))) (k (* (let ((w -80) (i z) (n (+ (- (- (add1 88) y) (sub1 (+ q 54))) (add1 w))) (a (sub1 -74))) (sub1 (+ (let ((o (add1 -30)) (u (add1 96)) (z h) (d 87) (v (- 23 -13))) (+ h v)) (* (let ((n p)) -80) (- -18 h))))) (sub1 (+ (sub1 (* (* 36 28) (add1 w))) (+ (+ (- 0 27) (+ -73 e)) u))))) (z -57)) (let ((i b) (e (- (+ (sub1 (+ (let ((g -34) (o 11) (w 55) (f w)) h) (+ -26 -98))) (- 1 (* 34 (let ((g 20) (u -41) (b w) (a -19) (v y)) 82)))) (- (* (let ((r (let ((p q) (c h) (z 22)) h))) (- 55 e)) (- -44 (- 34 h))) (- (let ((z (add1 5)) (s d)) (+ z e)) (add1 -87))))) (v (add1 61)) (k (+ (add1 90) (let ((k (* (add1 (let ((r 79)) r)) v))) (- (let ((q (sub1 h)) (p z)) 51) (let ((j c)) z)))))) (add1 (add1 (- (let ((r -74) (v (+ q 45)) (x (- w u)) (l (add1 -58)) (p (- l -48))) (let ((x v) (g b) (s 47) (y -48)) d)) v))))) (let ((z q) (g (+ (- (* (add1 (+ 74 (let ((w q) (a -95)) 51))) (let ((s (* (sub1 -29) h)) (v (add1 (+ q -93))) (a (* v -73))) (sub1 (* 87 w)))) (* (let ((b (+ 57 68)) (q b)) q) (sub1 (- (let ((a q) (n 4)) h) (sub1 96))))) (+ (let ((l (let ((e -83)) (- (- z z) (* q w)))) (s (add1 (sub1 (add1 c))))) (- (sub1 (add1 -9)) -32)) (- 79 b)))) (x (let ((z (- -37 16)) (m (+ (+ (- (add1 (- -67 50)) p) (+ (* (- 66 h) (add1 z)) (let ((n 11) (h n)) (add1 q)))) 1)) (l m) (b (add1 (- (sub1 (add1 (- 18 m))) 28)))) (* -85 (let ((d (let ((d (+ (add1 -33) (sub1 97))) (m y) (b (let ((b (add1 -82)) (c (- 61 -62))) (add1 y))) (f (* (let ((h 70) (e -97) (s -48) (g 38)) w) w)) (y (sub1 -90))) (- (let ((i p) (d y)) 2) (sub1 -36)))) (q (* (- 62 (let ((a -32) (x y) (f -96) (o 98) (m p)) b)) (* (let ((g 78) (s p) (q h)) p) -81))) (r (let ((r 37) (i (+ (- h 65) 5)) (y (+ (add1 -63) (sub1 94))) (t (let ((t (+ b h)) (b (sub1 p)) (m h) (u (let ((n 6) (m -6)) -43))) 69))) m))) (* (add1 (add1 m)) (sub1 (+ 97 -36))))))) (s (+ (let ((e (+ (let ((v 65) (p (* (- -37 61) (* h p))) (g -94) (q (let ((a (let ((y x) (o z) (r 22) (z -20)) y)) (w (let ((g 32) (u -85) (a -98) (y -45)) -78))) y))) -88) (let ((f q) (d (let ((l c) (j (let ((e b) (t 30) (l y)) x)) (b b) (z (sub1 -56))) -8)) (y (add1 (let ((h b) (p p) (c h) (w -33) (l -26)) c))) (a -21) (g (* (let ((i -97) (q 90) (e h) (f -90) (a 11)) 54) (* 88 q)))) -35))) (u (add1 -59)) (b (sub1 x))) (add1 (+ 28 -6))) (sub1 (let ((h (+ h (sub1 (let ((u q) (q 45) (d -17) (l 18) (c 83)) u)))) (y (+ (* (let ((w 33) (p 8) (m 85) (r -1) (j 80)) 0) (let ((h 47) (u 18) (j 79)) x)) (add1 (let ((l b) (j l) (i h) (x -78) (a 13)) -98))))) (- (let ((r (sub1 q)) (n (- 63 q)) (d (- 33 q)) (b (sub1 -41))) (add1 d)) (let ((y -22) (z (- -9 -10)) (r (+ -37 100))) (+ 54 h))))))) (v h)) h)))) (+ (let ((j (+ 2 b))) (sub1 (+ 55 -74))) (- b (add1 (- (sub1 (sub1 (add1 c))) (let ((a -93) (h (sub1 (+ (let ((q -49)) y) (- -83 -26))))) (- (add1 (- c p)) (sub1 w)))))))))) (i g) (k i)) -3)))) (let ((u (* (sub1 (let ((x -99) (a (add1 -60)) (g w) (e (sub1 (let ((t (let ((h z) (y (let ((b (+ (* -79 (let ((v (add1 y)) (i (let ((n 78) (p 52) (h 15)) -58)) (e (add1 -87))) (+ k 58))) (add1 (sub1 (add1 a)))))) k)) (s -45) (w 0) (r (- (+ (- (add1 86) 85) -37) (* (+ (+ (- a -41) (sub1 42)) (let ((g (sub1 -95)) (i (sub1 z))) (sub1 24))) (let ((l h)) (+ (sub1 -26) a)))))) z)) (j w) (w (sub1 (let ((z j) (n (- (let ((y (- (- -6 -51) (* w a))) (e -10)) (+ (+ 31 e) (add1 -97))) (add1 (sub1 (sub1 j))))) (u (sub1 (add1 15)))) (sub1 (let ((t (* (- -63 t) 92))) n)))))) (let ((m (+ j 7)) (t (let ((y (let ((g 8)) (+ (* w (* h 70)) (sub1 66)))) (j -82) (e (add1 (- -22 (sub1 (* w -30))))) (a (let ((i (let ((d -25) (r (+ (* j -57) (- -9 d))) (z (* 23 (let ((p r)) j))) (s -10)) (add1 -33))) (x (sub1 (add1 m))) (w (* (sub1 0) (add1 (+ 22 -90))))) (* (sub1 19) (add1 (add1 h))))) (l (+ y 48))) (add1 (add1 t))))) (- (add1 (+ k (- (add1 a) (- 49 73)))) -90)))))) e)) 22)) (d (add1 (let ((q (+ w k))) (* (add1 (sub1 (- 15 h))) (let ((a (add1 (sub1 (let ((o (sub1 -83))) (+ (+ (* (let ((l u)) -57) (* 54 91)) (- 18 (+ 67 46))) (- (* 31 (add1 33)) 9)))))) (f (* (add1 (add1 (let ((p a) (q (let ((k u) (f h)) (- (let ((p 48) (d a) (w -32) (a -83) (f -26)) u) q))) (v (add1 (add1 (let ((t -90) (o a) (v k) (z -71) (x 93)) 57)))) (t q) (u (- 85 z))) (let ((d (sub1 -73)) (j u) (p (sub1 75)) (i (add1 (add1 v))) (h (- -85 (* -16 h)))) 58)))) (- (let ((o (- (add1 -72) (* (* (- 3 56) (sub1 83)) (* (sub1 h) (* q w))))) (c (- 81 (- (let ((y (+ -90 -43)) (a (+ -94 13)) (j (- y -54)) (d (+ y 42)) (o (sub1 z))) 7) (* (add1 19) (add1 a))))) (r (let ((w 72) (c y)) (sub1 (+ (* z -93) w)))) (n 27)) (add1 39)) q))) (s (add1 (sub1 z))) (c 95) (j (+ -66 (* (let ((u (* (let ((c (sub1 (add1 z))) (t (let ((g (let ((g -64) (j 30) (q a)) w)) (l (add1 w)) (r (add1 4)) (z l)) (add1 l))) (k -64) (r (sub1 (+ w q)))) (* 34 0)) (add1 (+ (* 48 -89) (+ z 19))))) (o (let ((f (- (sub1 (add1 60)) (- (+ -85 f) (sub1 94)))) (t q) (d -58) (o 90) (c w)) (let ((y (let ((r (* -40 d)) (z (sub1 f)) (j (add1 s))) 79))) (let ((k h) (b (+ t -45))) (* w -23))))) (z u)) (* 45 (+ (let ((b (sub1 y))) (+ 3 -72)) 72))) (sub1 (sub1 (* (- k (sub1 -25)) -12))))))) -80)))))) (add1 (- d (sub1 (+ (* (+ (sub1 (+ (let ((k (* (let ((z y) (k -100) (l u) (a -17) (e y)) -56) (add1 h))) (l (- (let ((o -10) (f u) (l o) (x 10) (j -24)) u) -88))) (let ((v 55) (z (* 52 l))) (let ((m y) (c y) (s w) (q 45) (e h)) z))) -62)) (add1 -73)) (add1 89)) d))))))