(sub1 (- (let ((a (let ((d (add1 (let ((y 53) (f (+ (* -72 (+ (sub1 -86) (add1 -79))) (* y (let ((r (- 38 82)) (f (sub1 r)) (i (* y -43)) (q f)) 50)))) (r (add1 (add1 -82)))) -42))) (u d) (j (+ d (sub1 (* (add1 (let ((s (add1 -76)) (p (- u u)) (h 72) (z d) (n (- d -51))) (add1 u))) (- (let ((o (* -88 -77)) (h (add1 4)) (c (* u d))) (let ((a o) (m a) (i u) (z -25)) -86)) 91))))) (q (+ -88 (* (let ((q d)) d) (add1 (- j (add1 58)))))) (t q)) (+ (sub1 (add1 (+ (add1 (sub1 u)) (sub1 (* d 17))))) d))) (x (add1 (sub1 (let ((c (sub1 (let ((r 70) (w (sub1 a)) (j (sub1 a)) (t (let ((j (+ 75 j)) (t (sub1 -77)) (g (- a -15))) (let ((f t) (x -72) (o 76)) 39)))) -6))) (h (let ((e -9) (b (add1 (add1 c))) (j (- (let ((f (let ((a c) (f c) (x -3) (k 20)) -49)) (z (* e -43))) 68) (add1 (- e 97)))) (l (sub1 (+ (- a -34) (let ((i e) (b j) (d -2) (t -35) (n 81)) a))))) (add1 (+ (- 70 j) (+ 84 j))))) (l (sub1 (- (+ (- h -51) (- h 57)) (sub1 (- -23 a)))))) (- (+ (* (* c c) h) (+ c (sub1 -50))) (let ((b (add1 (* 16 c)))) (- (* c 67) 92))))))) (i x) (q (add1 (let ((o (* (let ((v (+ (* (- a x) (sub1 63)) (sub1 (* -30 a)))) (q (sub1 (add1 (sub1 i)))) (r x) (t (let ((m (let ((c (- q v)) (n -48)) (- a n))) (w -10)) (sub1 (- v v))))) (sub1 (- (* -1 r) (- 19 59)))) 0)) (b -79) (r (- (let ((f (+ (add1 (* i i)) (- (sub1 20) 91))) (b -11) (i (add1 f)) (m 93)) -37) (add1 59))) (h (let ((e b) (p (add1 (* (sub1 (+ 55 99)) (let ((d (sub1 o)) (s (add1 51)) (a (add1 78))) (sub1 44)))))) -12)) (d (- (+ b (+ 7 (* o (+ r 11)))) (let ((u (sub1 (+ (sub1 b) 32))) (i (add1 o)) (t (- (* (add1 u) (* -77 o)) (- (add1 r) (* h r)))) (z (* (sub1 (sub1 o)) o)) (r (+ t (let ((g (* z x)) (x (add1 o))) (+ -23 81))))) (let ((b (let ((d (* u i)) (a -36) (s (* -84 u)) (j z)) -62)) (r (let ((j (- 98 u)) (c (* z b)) (h 56) (d o) (r (add1 j))) i)) (j (add1 (let ((c b) (f -41) (a f) (n f) (o x)) -33)))) (add1 (- 39 65))))))) (let ((e (let ((t (sub1 (* d (sub1 b)))) (x (* (* a (- b -77)) (add1 95))) (s (sub1 95))) (let ((q (let ((n (- r -59)) (u (+ d n)) (p (- 16 -20)) (c (sub1 x)) (l (- 68 h))) -52)) (u (+ (* a -32) (let ((o -93) (w 81) (p -21)) 41))) (o (- o d)) (i q)) (let ((w (- d 16)) (j (let ((g -83) (t w) (q r) (x g)) -28)) (q (sub1 j)) (i (let ((r d) (p j) (l 78) (k 46)) d))) (- -19 u))))) (c (- (- (let ((b (+ 12 34)) (e (* 84 4)) (q (let ((p r)) x)) (s (+ r e))) 58) o) (sub1 (add1 h)))) (b x)) (* (let ((a -25) (b (+ (+ i 35) (- -57 -80))) (k (- (add1 c) (let ((o d) (u a)) b)))) (let ((o (+ k b))) (* o d))) o)))))) (- (+ (sub1 (sub1 68)) (- (sub1 44) 55)) (add1 (- (+ q -33) q)))) (+ (sub1 (- (+ (add1 (* 58 (+ (add1 62) (* -65 -91)))) (sub1 (* (add1 (let ((o 6) (l 25) (v l) (x 76)) l)) (* (* -8 75) (+ 1 -69))))) (* (add1 -88) (+ (add1 (let ((g (add1 -16)) (c (let ((a -72) (i -67) (e -9) (r 50) (z g)) -33)) (y -68) (r (- 90 21)) (s (* g c))) 86)) (sub1 (* -85 (* 25 -80))))))) (+ (let ((e (sub1 (+ (- (sub1 (* 79 67)) (add1 (- 5 -20))) (- (+ (sub1 75) (* -77 -77)) (- (+ 42 50) (+ 5 -27))))))) (sub1 (+ e (let ((h (+ e (add1 e))) (d (sub1 -54)) (l (sub1 (sub1 h))) (r -54)) (let ((v -77) (m (add1 l)) (c (* h d)) (e (+ -87 -60)) (x 72)) r))))) (* (- (* (* (- (sub1 93) (+ -28 -44)) (- -99 (add1 96))) (let ((j 27) (k (- (let ((m 28) (r j)) r) 11)) (d 17)) k)) (- (- (- (sub1 3) -17) (let ((o (add1 1)) (w (sub1 o)) (l (+ -81 35)) (c (add1 w)) (n (let ((d w) (e 54)) 94))) w)) (* (let ((o (+ 29 -90))) (add1 o)) (let ((l (- 61 -16)) (j l) (m (sub1 l))) (+ 49 -11))))) (sub1 (- (let ((w (+ (let ((c -8) (u c) (v -13) (n c) (q -65)) -81) (sub1 29))) (c 69) (j (+ (let ((m 84) (e w) (f m) (w 13) (y e)) 36) (add1 c))) (r (add1 (+ c c))) (m (- (let ((z -36) (t 64)) j) w))) (sub1 c)) (sub1 (* (let ((c 6) (h 1) (o c) (l c)) h) -19)))))))))