(add1 (- (sub1 (let ((z (sub1 (* (let ((w (let ((k (- -26 (let ((a (* (sub1 -6) (add1 15))) (r (- (let ((s 40)) -58) (let ((z a) (y a) (m 54)) a))) (c (let ((t (* 55 a))) (+ 75 t)))) a))) (g (* (+ (add1 (add1 12)) -66) (+ (add1 (add1 k)) 36))) (t (- -22 (add1 (* (* g 96) (+ 19 26)))))) (let ((v g)) (add1 (add1 (add1 -99)))))) (i (add1 (let ((m (- (sub1 (* w -40)) w)) (s (+ m (add1 (sub1 w)))) (z (let ((u (+ (sub1 -96) -48)) (n (sub1 m)) (g s) (c (- (+ 81 u) (* -47 s)))) (- (add1 w) (sub1 m))))) (let ((y (add1 (sub1 m))) (u (* (add1 y) (- z s))) (e (add1 (add1 m))) (g u) (k (* 74 (- w y)))) s)))) (h (add1 i))) (sub1 -61)) (sub1 (sub1 (* (add1 15) (+ -73 (- (add1 27) -52)))))))) (n (sub1 z))) z)) (+ (let ((t (- (sub1 (let ((e (- (sub1 (+ (sub1 (add1 -2)) (- (add1 -78) (add1 -44)))) (let ((t (let ((o -57)) (- (* 54 o) (sub1 o)))) (y (+ t (* (+ t t) (add1 t)))) (r (let ((a (let ((o y) (s t) (k (- t y)) (w (add1 87)) (m (+ k 40))) (+ 8 -52))) (n 80) (q (add1 (sub1 t))) (f y)) -65)) (x (* (add1 66) (let ((q (+ r 77)) (u (let ((u -48) (e -5) (b -44) (o 47) (g y)) 78))) y)))) 3))) (x (let ((m e)) (sub1 m))) (c (let ((f e)) (add1 94))) (f 32)) (sub1 (add1 (add1 c))))) (* (- (add1 (add1 60)) (+ 16 (sub1 (+ -28 (sub1 (add1 12)))))) (let ((r (sub1 (sub1 (- (- (add1 -31) 33) (+ (- -67 29) (add1 88)))))) (u (+ (* (sub1 r) (add1 (* (- -56 r) (sub1 83)))) (+ (let ((z (+ r (add1 r))) (r r) (g (- (sub1 z) (- z -52)))) (let ((b z) (z (+ -75 r)) (d r) (y g) (f (- -67 96))) (+ -14 d))) (let ((s 37) (a r) (d (add1 (+ r 2))) (z (* (- r 15) d)) (i (let ((q (* r 57)) (u (add1 -22)) (r (* q -11)) (i r)) (sub1 d)))) 60)))) (a -53) (e (let ((g a)) a)) (w (let ((u (sub1 (add1 -30))) (c (sub1 (sub1 (- (* u e) (add1 r))))) (x -77)) (* (- (add1 (add1 a)) -85) (sub1 c))))) (+ r (add1 -46)))))) (u 13) (m (- (- u -1) u)) (g (- (sub1 (- (sub1 (let ((t (* (let ((j (- m -43)) (y (sub1 m)) (q -17) (c (+ u j)) (d (* -79 99))) (- 66 m)) 81))) u)) 69)) (sub1 (sub1 u))))) (let ((c -84) (t (* 78 (- (- (- (add1 (* (let ((w c)) -12) (sub1 -22))) (* 99 (+ (* -60 m) (- g t)))) (- (+ (- (- g -15) (* -79 -65)) 26) -74)) 77)))) (+ (add1 (+ (- (* (let ((f (let ((o t) (n -52) (c n)) c)) (l 32) (x (- 29 f)) (k (add1 -36))) (add1 m)) (let ((t (add1 -69)) (v -84) (p (add1 49)) (r (add1 44)) (l -29)) -88)) (add1 (* (- c c) -73))) (sub1 -14))) (- (+ -63 (+ (* (* 72 56) (+ -64 (* -31 u))) (- c c))) (add1 (- (sub1 (add1 (- 4 t))) (- (add1 (- g 16)) (* (+ 53 c) (sub1 76))))))))) (- (+ (sub1 -12) (* (+ (+ -94 95) (sub1 (sub1 (sub1 (+ (- -90 27) (+ -53 -59)))))) (* (+ (let ((g (add1 (* -70 (add1 70)))) (s (* (let ((v (add1 87))) (sub1 98)) (let ((u (* g g)) (o (sub1 u))) (+ -53 g)))) (w (sub1 (sub1 (let ((u 24) (r s) (t u) (q u)) q)))) (a (* (+ (- s 98) (let ((e -33) (o s) (s g)) w)) (let ((v (* -17 -78)) (q (* v -34))) w))) (k (sub1 -51))) k) (* (let ((p (- (- -98 70) (+ -64 3))) (s (add1 (sub1 p))) (n s) (b (+ s (add1 -67)))) n) (add1 (let ((q (- 63 100)) (u q) (p 96) (t (+ 57 u)) (b -73)) (+ u -1))))) (sub1 (let ((m (let ((l (add1 (+ -3 -65))) (w -54) (p (let ((w l) (d -64) (c d) (g (sub1 -92))) (sub1 d))) (r (+ (+ p l) (sub1 -62))) (o (let ((t (add1 69)) (c t)) (add1 r)))) (sub1 (add1 o)))) (l 34) (k (sub1 (- (* -65 l) (sub1 l))))) (let ((d 60) (u (let ((j (sub1 m)) (m -3) (t (- 46 d))) (add1 6))) (g (let ((j (* -32 k)) (m (- -79 86)) (x (sub1 75)) (k 48)) (let ((j 50) (s 75) (h -64) (v -91)) 92))) (o k)) l)))))) (+ (add1 (- (sub1 -17) (sub1 (- (+ (let ((p 96) (a (* p p))) 92) -48) (let ((x 21) (n (add1 (sub1 x)))) (add1 (let ((o n) (i -81) (r -47) (j -45)) 39))))))) (+ (sub1 (add1 (* (- (* (add1 91) (+ -81 -65)) (sub1 (add1 -66))) (let ((l (add1 (let ((a -32) (p -68)) p))) (q 69) (t (- (* 17 l) (sub1 q)))) (sub1 (* t l)))))) (add1 (+ (- (* (add1 -67) (sub1 (let ((z 46) (j z) (k j) (t 81)) -97))) -51) (+ (+ (* (let ((g -53) (v g) (f -1) (w g)) 90) -56) (add1 (* 32 25))) (add1 (- (- -4 86) (- 90 -12))))))))))))