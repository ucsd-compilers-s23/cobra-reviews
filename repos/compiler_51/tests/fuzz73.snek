(- (add1 (add1 99)) (sub1 (* (sub1 (+ (let ((j (add1 63)) (e -95) (o 23) (m (* (add1 o) (let ((g o) (p (* -47 (let ((k e) (b (add1 (let ((p (sub1 (+ (sub1 o) (sub1 e)))) (i (* (* (let ((j j) (z o) (o 4)) k) (- k e)) 74))) (- e (* (- -52 g) i)))))) (let ((x 39) (t (* (* 53 e) e)) (g o)) (- (add1 (+ b (- e -56))) (- (let ((w g) (k (add1 x))) (let ((j 28) (h j) (p -58) (v o) (f -89)) g)) (let ((s o)) o))))))) (u (sub1 (* (- (- (- (* (add1 -51) g) (let ((x (* j 24)) (i (- p -23)) (b x) (t (- e x)) (g o)) 30)) (sub1 (- (+ 31 j) (sub1 -5)))) (- (sub1 (+ (add1 j) j)) (* (+ (let ((o -14) (w o) (t -68) (p -14) (f 83)) 69) (let ((p o) (f p)) o)) -37))) 15))) (i (+ (let ((i (* (* (let ((t (* (* 44 13) (+ 4 39))) (m 2)) (- (let ((y 55) (p 17) (t 19) (j -57)) 27) (- j 2))) o) (+ (sub1 (sub1 73)) (let ((c 70) (t (+ (sub1 j) (sub1 -68))) (l (add1 (+ j -66))) (m (add1 (+ -80 p))) (k (- (add1 m) (add1 -11)))) (sub1 (- 21 69)))))) (z (sub1 (add1 (+ g (+ (add1 12) (let ((c o) (b g) (r 93) (v c)) e)))))) (n (let ((k (* (+ (+ (+ 21 e) (- j u)) e) (* (sub1 (sub1 g)) (let ((p (* p z))) (sub1 z))))) (b 1) (q 33) (r (+ (+ (add1 (sub1 i)) (sub1 (add1 19))) (+ (sub1 e) (+ (- o z) -79))))) (+ (- (let ((m k) (y -6) (t (let ((z 42) (s p) (e g) (a 8)) y)) (s 2)) (- i -39)) (* (+ r 31) (add1 -42))) p)))) (add1 (let ((j (let ((z (- (- u -34) (* e 45))) (u -95) (f (let ((c (- i 19)) (a 30) (b (- p 0)) (g (let ((w j) (p 87) (y w) (n -10)) 94)) (f o)) (let ((d 23) (l 51) (g d) (o b) (k l)) -4))) (x (let ((e (add1 35)) (t -72) (y 95)) (* -71 z))) (a (sub1 (sub1 j)))) (add1 (sub1 p)))) (q z) (k (+ 16 (add1 o)))) (add1 (add1 u))))) (add1 (sub1 (- (add1 (+ (+ u -83) (let ((v -33)) e))) (+ (add1 (+ e -79)) (- (+ p j) (+ o u))))))))) o))) (p (+ (let ((a (let ((u (add1 (* 61 (* e (- -27 (let ((e j)) -27))))))) (- (* (* (+ (let ((b 34)) (sub1 o)) (sub1 (let ((v u) (k e) (w -58)) 91))) (+ (sub1 (sub1 17)) j)) (+ (- (* (add1 58) (add1 u)) 19) -3)) (sub1 (* (let ((k (add1 (+ 18 e))) (y -23)) (* (* -90 u) (add1 75))) (* (- (let ((h 39) (f 17) (l e) (k -61)) o) (let ((b -23) (n 16) (z 91)) -41)) -82))))))) (sub1 (- (sub1 (- (* (+ -37 54) (+ (sub1 38) (+ -85 49))) (* j j))) (sub1 (sub1 (add1 (add1 -7))))))) 49))) 48) (add1 (sub1 69)))) (- -86 (- (- (+ (- (* (* (+ (add1 (let ((t (+ (add1 -90) (add1 56))) (o (add1 (let ((x t) (a x) (h t) (z 0)) 15))) (y 72)) (add1 (* 19 40)))) (- (+ 16 (sub1 (- 76 -90))) (sub1 (- (+ 76 0) (add1 -47))))) (let ((f -28) (g (let ((b (add1 (* (let ((j f)) f) f)))) (add1 (add1 (+ f b)))))) (+ -80 (let ((e f) (s (add1 (* 90 g))) (v (* (sub1 69) (+ 85 e))) (t f) (a (add1 (let ((e v) (g 39) (n 97) (s v) (x -78)) 40)))) 76)))) 82) (add1 (add1 (add1 (add1 (- (* (add1 -24) -28) (* (- 55 71) (+ 29 65)))))))) 1) (sub1 (let ((f (* (+ (add1 (let ((c 74)) c)) (* (let ((e (let ((j (add1 -77)) (x (sub1 (sub1 -99))) (o (add1 (sub1 x))) (q (let ((h (let ((t 26) (y o) (j t)) -61)) (p (add1 29)) (j (add1 -86))) o))) (* j -26))) (x (add1 (* (let ((j 71) (c -23)) -11) -18)))) (- (add1 e) (- (let ((r x) (j e) (c j) (o x)) x) -23))) (let ((p -77) (l (sub1 p)) (z 34) (w (let ((s (add1 -1)) (u (+ p (* l p))) (f (+ (let ((q p) (a z) (b u) (j -5) (t 29)) t) (+ 21 -34)))) (let ((y (sub1 l))) 34))) (r (* (* (+ -2 -59) (let ((i -18) (j -56) (d -85) (h 22) (v p)) -64)) (add1 (add1 l))))) (add1 (+ 11 (let ((j w) (v 30) (c -58) (x p)) l)))))) (- (sub1 (add1 (+ (sub1 (add1 83)) (let ((l (* -50 -86)) (v (sub1 -45)) (k 70)) (+ 28 -8))))) (+ (add1 (+ 10 (let ((e (sub1 45)) (l (sub1 13)) (r (add1 -46)) (v e) (b (add1 r))) (+ b e)))) (let ((a -5) (u (add1 (sub1 (* 15 a))))) (add1 (let ((m (add1 a)) (k (sub1 a)) (c (let ((d a)) d))) (add1 a)))))))) (h 15) (c (* h -75)) (x 43) (t (add1 x))) (add1 (sub1 (- (add1 (let ((l (+ (add1 57) (* h 26)))) (+ (let ((m -35) (d 64) (z -92) (f -20) (v 26)) z) t))) (add1 (+ 63 -53)))))))) (let ((p (* (+ (- (- (- (- (let ((h (let ((s (+ -71 -90)) (f (add1 -74))) (- s s)))) (- (* 77 h) h)) (add1 54)) -31) (+ (- (* (let ((c (let ((c 97)) c)) (t (* -72 95)) (h (* t t)) (a (let ((i 30) (d h)) 79)) (i (add1 c))) -76) (+ (let ((f 76) (i f)) f) (- -12 77))) (let ((b (* (- 41 91) (let ((z -25) (k -55) (w -71)) z))) (s (sub1 (+ b b)))) (let ((q 41)) (- 15 34)))) (* (add1 (+ (add1 -62) (sub1 -85))) (+ (* 91 (add1 -20)) (* 26 (let ((u 79) (x u) (s -83) (f u)) 66)))))) (add1 (* -54 (- (- (* (- 27 -62) (let ((c 6) (b -76) (z 36)) -97)) (add1 (let ((y -23)) 63))) (add1 (sub1 (+ -77 80))))))) (let ((b (add1 (add1 (* (let ((r (* (add1 -23) (let ((q 89) (p -97)) p))) (q (- (sub1 83) (* r r))) (p (let ((h r) (y (+ r -69)) (s (* h r))) (+ h 71))) (f (add1 (add1 q))) (o -56)) (+ (+ r 34) (let ((o -100)) p))) (+ (add1 (+ 43 -14)) (sub1 (* 30 90))))))) (p -3)) (- b p))) (sub1 (sub1 (let ((f (* (add1 -3) (sub1 (* (add1 97) (* (+ -13 -59) (sub1 -16)))))) (i (+ f (add1 (add1 f)))) (n (+ (sub1 (add1 (let ((f (- -11 f)) (i (- f i))) (* 94 -22)))) (add1 (* i (let ((d (- i i)) (x (+ 53 33)) (m (sub1 -48)) (t (sub1 x))) (- t t))))))) (sub1 (sub1 6))))))) (x (- (sub1 (let ((g (add1 (- (add1 60) -82))) (f g) (q (let ((u (add1 (add1 -58)))) 77))) -10)) (- (+ (add1 (+ (let ((p (let ((d (let ((s (+ -95 16)) (c p) (h (+ -33 c)) (a (- 81 h)) (w (let ((g h) (b h)) g))) (sub1 -34)))) (- (sub1 p) (+ d 22))))) (add1 (add1 (add1 -90)))) (add1 -31))) p) (- p (+ p p))))) (i x) (a (sub1 -86)) (v (sub1 (- (+ (- 41 (sub1 (- (+ (sub1 (sub1 a)) (* (let ((j -80) (a x)) 56) -25)) 61))) i) 23)))) (- (let ((w x) (z a) (i (let ((b (sub1 (add1 (sub1 (let ((a (let ((c (+ a x)) (v (sub1 71)) (t (add1 i))) (add1 83))) (q (add1 (- 28 a)))) (sub1 (+ a w))))))) (s (+ w (sub1 v)))) (add1 (- -27 (add1 (* (let ((h (sub1 p)) (a (- x v)) (r (let ((x 45) (z h) (w -37)) w))) 35) 9)))))) (f (add1 (+ (sub1 (+ (sub1 (+ 60 (+ 54 i))) (add1 (* -35 (+ v -20))))) -10))) (a a)) (sub1 (sub1 -54))) (let ((i (+ -94 -94)) (t (let ((f x) (a (- p f)) (z (add1 (let ((p 30) (b i) (g i)) (let ((o (- (+ (sub1 b) (+ x x)) (- (- f 12) (let ((m 11) (i -71) (e x) (c g) (y -56)) 55)))) (l (sub1 (+ (add1 44) (- x v))))) (sub1 o)))))) 100)) (d (+ (sub1 -93) (+ (add1 70) (sub1 (let ((y (* (- t 61) (* 69 (* -15 i))))) a))))) (g i)) (* (- -30 46) (- (let ((e (+ (add1 (* (- -70 85) (+ -54 i))) (* (let ((n (- t p))) (+ a -39)) (* (+ 20 t) 29)))) (s (add1 83)) (f (- (let ((i (sub1 (- i i))) (q (* s d)) (d (add1 (* -91 g))) (o (let ((f (let ((s p) (o g)) -83))) (+ 90 q))) (b (let ((j -68) (h (add1 -76)) (c -46)) (- q h)))) -91) (let ((y (sub1 (let ((a -73) (z 39) (s -40) (q a)) 16))) (v v) (x (add1 -16))) (sub1 (+ 40 26))))) (l (+ (- (+ s (* e d)) (* (sub1 -57) (add1 37))) (- (sub1 (let ((a g) (j 78) (n v)) -1)) (+ (sub1 4) (- -62 t)))))) -79) d))))))))))