(let ((x (sub1 (* (let ((f -3)) (add1 f)) 51))) (f (let ((i (+ (sub1 70) (+ (- (- (sub1 (let ((z (* (let ((z (let ((v (* 11 -21)) (g (sub1 x)) (c -47) (q (* g c))) q)) (y z) (o (* (add1 y) (let ((i -77)) -29)))) 18) x)) (m (- (- (sub1 (let ((a 44) (p x) (b x) (g 86) (q z)) p)) 6) (sub1 (let ((e (* 7 x)) (k -29)) (+ -33 -32))))) (x (add1 (sub1 (+ (- z x) (* 28 -77))))) (d (let ((m (add1 (add1 (+ z m))))) (sub1 (* (+ z z) (sub1 m))))) (w (- (* (- (- m -44) (sub1 0)) (sub1 -46)) (let ((y d) (e (sub1 (+ 79 73))) (f (sub1 (sub1 -70)))) (sub1 (- -97 -28)))))) (add1 (+ -87 (+ w (add1 m)))))) x) (- -18 x)) x))) (g (add1 (+ (add1 (add1 (add1 (- (sub1 i) (+ x 14))))) (+ (- (+ (let ((k (add1 (- (- x (add1 i)) -14))) (i 22) (q (add1 79))) 23) (let ((i (add1 (- (- (- x -46) (- 76 x)) (add1 (* i x))))) (v x) (q (let ((j (add1 (+ (add1 45) (sub1 13))))) (let ((x v) (y (- (+ x x) (let ((v x) (o -39) (j j) (a 58) (m -32)) i))) (e (add1 (+ 3 i))) (z (add1 (add1 x))) (r (- (let ((g 58) (r 53) (w 49) (e g)) y) (+ z j)))) -51))) (k q) (m (- (+ (let ((t (let ((u 17) (n x) (j k) (k 62) (q 59)) i)) (j (add1 v)) (q (sub1 q)) (d (let ((d -35) (r x) (q -50) (j 75) (b i)) v))) (+ 74 k)) (let ((d -33) (u (+ k -56)) (z (+ -59 62)) (q (* k d))) (- 0 i))) (add1 (* -23 (* 81 -51)))))) (* m (let ((a (let ((x (let ((h k)) 99))) (add1 k))) (m (+ k (- 79 v))) (z (let ((b (* -41 k)) (l m) (q (+ -57 56))) (* x -7)))) (sub1 (+ m v)))))) (let ((k (sub1 (+ (+ (let ((q (* x x)) (u (* i -98))) (add1 x)) 95) (+ (let ((o (* 50 i)) (a (sub1 x)) (h 54) (l (* 9 o)) (c 77)) (* 63 74)) (+ (add1 i) x)))))) (+ (+ (+ (let ((u (let ((r -87) (z -8) (v -71) (x -93)) 52)) (a (+ -72 96)) (z (- x i))) (let ((i 40) (k x)) x)) (add1 (* i x))) -2) 9))) -13)))) (f 82)) (- (sub1 -10) x))) (c (add1 (let ((x (sub1 (sub1 16))) (i -31) (a (add1 (add1 (+ (add1 f) (add1 (let ((n (+ (let ((j x) (u (add1 (sub1 -25)))) f) (- (let ((l (+ 20 37)) (r (add1 i)) (w (- 83 r)) (h (sub1 l))) (sub1 x)) (add1 i)))) (d (+ (* (- (+ -54 52) (sub1 i)) (add1 18)) (sub1 (+ (* i 88) (let ((b x) (p n)) p))))) (l 67)) (let ((n (* (- x d) l)) (a (add1 (* -72 x))) (c (sub1 (* 30 (sub1 l)))) (q (sub1 (sub1 (+ 98 -11)))) (h (- (* (let ((w 44)) f) x) (sub1 (+ 2 q))))) (let ((n (+ (+ -24 i) -100))) 36)))))))) (w (+ (- 92 (let ((v 28) (s 12) (d (let ((e (+ (add1 93) (* (* (let ((m (- a -29)) (t (+ x 88))) (+ -89 s)) (sub1 s)) (sub1 (- (+ 11 v) (let ((e x)) f)))))) (b (- a v)) (p (- (* 70 (- (add1 (* -94 97)) (- (sub1 v) (* -37 -66)))) (+ e (add1 (sub1 a)))))) -91)) (u (sub1 (add1 (- (let ((u s) (m (+ (add1 -99) (+ 37 d))) (s (let ((a (- -93 -92)) (i (- 46 m)) (n d)) m))) (add1 (let ((w d) (r -24) (n x) (k 41) (g 43)) m))) (+ -42 (* (sub1 -2) f)))))) (p (+ v (let ((d i) (q (sub1 s)) (t (let ((e a)) (add1 (* (add1 -89) (- -40 29))))) (v (sub1 (+ (+ (let ((l t) (k i)) 30) (+ -34 -40)) (- (add1 -11) (+ f -46)))))) (add1 (add1 -11)))))) (- a f))) f)) (d (* (let ((w (* 30 (let ((g (+ (let ((c x) (d 46)) (add1 29)) (* (add1 (add1 (add1 53))) f)))) g))) (n (- -59 94))) (let ((s w) (n i) (v (add1 (add1 (+ (- (let ((h -8) (l (* s 17)) (q (- x -29)) (w (sub1 w)) (r (sub1 -49))) (+ w x)) (let ((a (* i -61)) (e (sub1 -77)) (s (sub1 s)) (b (add1 a))) n)) (- (+ (- n -31) 99) (add1 (sub1 i))))))) (x (sub1 (+ (add1 (- (* (add1 6) (add1 -34)) (+ (* 29 -82) (* s f)))) (sub1 (sub1 (- (- w 34) (+ f 23))))))) (q -2)) f)) (sub1 -55)))) (let ((u (- -4 (+ (+ (+ (let ((y (+ 52 (sub1 (sub1 11)))) (s 88)) (sub1 (sub1 (- 36 26)))) (sub1 (+ (* (+ a 10) (add1 w)) 62))) 29) (* (add1 -44) (- (+ 19 (* (sub1 (- i -51)) (sub1 45))) (* -18 (+ (+ -72 (add1 -51)) (sub1 (add1 96))))))))) (k (+ -48 (+ a (+ (sub1 60) (- w (sub1 (- (sub1 (* x u)) (* (- a -48) (- 69 -28)))))))))) (let ((y (* i k)) (n (add1 (- (- (+ (- (- (* 55 -4) 25) (let ((v (add1 d)) (p (* f k)) (y (- d p)) (f u)) (sub1 -60))) (let ((d (let ((i (sub1 k)) (s (let ((w 16) (i w) (t 8)) -23))) x)) (w (+ (* 43 -48) 25)) (v -44) (x (add1 d))) (- (- x a) (add1 36)))) (+ y (add1 (- 1 (- -22 u))))) f))) (m -51) (f 38) (e (* (+ (- (add1 -34) -25) (sub1 u)) u))) (- a 1)))))) (m (add1 (+ (sub1 (+ (add1 (- c -26)) 31)) -20)))) (* (sub1 (* (+ (sub1 -57) (sub1 (add1 (* f (let ((s (sub1 (sub1 (sub1 x)))) (w (+ (* (add1 -69) (+ 1 96)) (sub1 (+ s -25)))) (h (+ (- (- 11 -88) (+ -65 5)) (add1 (* f 17)))) (k (add1 (add1 (add1 m))))) (add1 (- (+ x -71) (+ 80 -31)))))))) (add1 m))) (let ((f (let ((h (sub1 (add1 (add1 (+ (* f -18) (* (sub1 (let ((h (- -3 35))) (* 70 x))) (let ((l (+ (add1 72) 20)) (m (- 22 -97)) (j (- 40 (- c f)))) (+ (add1 c) (* 4 -8)))))))))) (- (add1 (add1 (- 4 x))) f))) (g (let ((c (add1 -42)) (f (- (* (let ((q 38) (j m) (o -50) (h (+ -47 (sub1 (let ((m (let ((x (sub1 -26)) (t (+ 60 68)) (k (- 49 -82)) (q q) (a (add1 t))) (+ m 90)))) (sub1 (- m j))))))) (- (let ((g (add1 (* -39 (* q q)))) (b (add1 (+ 34 (let ((v q) (o j) (a c)) -6)))) (a (* (sub1 (let ((b m)) -11)) (sub1 (* g -99)))) (x g) (p (- 37 97))) (* (+ (add1 68) (+ h x)) 93)) (sub1 (let ((b (- (+ q 74) (add1 87))) (s (+ (add1 m) (sub1 f))) (q (- (* -35 b) -12)) (h (sub1 (sub1 c)))) (let ((q q) (f 42) (i (* j -76))) (add1 98)))))) -12) 44))) (+ (+ (+ (- (+ -86 (add1 x)) (let ((u (- 91 (+ (- 59 3) (- -41 f)))) (j -76) (f (add1 (sub1 (let ((i m)) -93)))) (g (let ((q -49) (m u) (e (- (+ -7 -51) (+ 72 f))) (d (* (sub1 c) (sub1 f))) (c (* m (add1 25)))) (let ((y (let ((t j) (f f)) 35)) (e (* -5 u))) (sub1 -15))))) (sub1 (* (+ f -25) f)))) (- 22 -60)) (sub1 c)) x))) (x (* m (* (- (* (+ (add1 (- -100 (sub1 (+ c g)))) (sub1 (let ((l (* (add1 1) (+ 15 -35))) (h (sub1 (sub1 l))) (o f) (g (let ((s (add1 c)) (k -85) (c c) (j (+ m x))) (let ((p 29) (a x) (q j) (s x) (l -48)) g)))) (- (* 9 25) (- -33 f))))) -16) (add1 g)) -25))) (k (sub1 (* (sub1 -17) 89))) (m (+ c (sub1 4)))) -38)))