(+ (- -62 (add1 86)) (- (sub1 13) (let ((o (let ((q (sub1 (+ (sub1 (let ((i (sub1 (+ -62 (- (- (sub1 (let ((h -79) (r -15) (w 96) (n 44)) 78)) (* (let ((g 69) (a g) (x g)) 26) 30)) (let ((b (add1 (+ 83 -52))) (q b) (t (* (let ((r 71)) 10) (- 81 b)))) -79))))) (u (- 90 (let ((u (+ (let ((w (+ (- i -51) (* i 55)))) i) (let ((r (* (- 100 i) (sub1 87))) (j (add1 (* -4 58)))) 31))) (j (+ (* (+ (add1 u) (* i 35)) (add1 (sub1 81))) -97)) (z (let ((s (* (+ (let ((j -19) (m -60)) 93) (- u 33)) (- -78 -4))) (f (- (+ (* 80 u) (+ j 93)) (add1 (+ i j)))) (u (+ 76 (add1 (- 34 91))))) (sub1 (- (- 33 -35) (sub1 i))))) (n (let ((w (let ((w (add1 22)) (h 19) (c w) (l -26) (v (* (- -81 i) (add1 -30)))) (+ j (let ((u 30) (x -49) (i v) (l -23) (y w)) -11)))) (m 17) (z (sub1 (add1 (let ((g m)) 66)))) (k 13) (h (- (- 66 (add1 k)) (* (add1 -1) j)))) (let ((p (+ k (add1 57))) (i (+ (- u p) (let ((u p) (h u) (n p)) 78))) (c (* (+ h -85) (- -34 i)))) h))) (l (sub1 n))) (- (sub1 85) -85)))) (g (let ((n (add1 (+ (- (let ((q (* u u)) (h (sub1 -66)) (u (add1 h)) (z q)) (+ -51 q)) 99) (let ((u (- (+ 45 70) (- u i))) (z (* (+ u i) (add1 i))) (f (* (+ u 2) (sub1 -54))) (n 48) (l (sub1 (* -16 z)))) (* (- n 56) -83))))) (v (* (- (let ((b (+ (let ((o -31) (c u) (l -67) (y l) (w 40)) c) (sub1 -29))) (i -61) (h (sub1 -23)) (q (- (- 38 b) (add1 u)))) (* (let ((o -11) (z h) (d b)) d) n)) (- u (let ((x (* -4 i))) (add1 u)))) u)) (q 78)) (add1 q)))) u)) (- (- (- (let ((x (- (* (- (let ((q -54)) q) (let ((i 75) (p i)) p)) (sub1 (+ -15 -51))) (+ (let ((q (add1 -43)) (b (* -36 q)) (a (let ((p -12) (y p) (d -54)) 42)) (z a) (t (+ 13 100))) 15) 11))) (v (* (* (- (add1 -47) x) (sub1 (+ 41 -51))) (- (sub1 (let ((k x) (a 77) (h 87)) -92)) x))) (m (+ (sub1 (- (* x -76) (* -8 x))) (+ (add1 (let ((c x)) v)) (+ (- 1 x) (- x v)))))) (sub1 (sub1 x))) (- (add1 (let ((o (let ((m -30)) (let ((j 57) (e -32) (t j) (y 64) (c m)) y))) (y (* (let ((s 28)) o) o)) (g (let ((g (let ((t -74) (q o) (g t) (s q) (y o)) g))) 85)) (s (- -40 -21))) -99)) (+ (sub1 (- -80 (add1 -30))) (add1 (add1 (- -9 -53)))))) (+ (sub1 (+ (let ((c (- 54 (add1 25))) (y (- (+ -96 c) (add1 c))) (v -81) (p (- -73 y)) (t (add1 (- 59 v)))) (add1 (sub1 y))) (sub1 (* (add1 -85) 49)))) (- -71 (+ (add1 (+ (add1 -9) (add1 97))) (+ (- (let ((v -24) (r v) (x r)) x) (+ 74 -59)) (sub1 -15)))))) (* (sub1 (add1 (+ (add1 -40) (- (- (* 59 -82) (+ -34 55)) (sub1 (let ((a -17) (b a) (z 55) (q -51) (v a)) 15)))))) (* (add1 (let ((l (- (sub1 (+ 77 16)) (sub1 (* -52 85))))) (+ l -19))) 90)))))) (o q)) (add1 (- o -100)))) (w -30) (d (sub1 (+ (let ((k (- (let ((l (sub1 (sub1 o))) (n (* -84 56)) (c (add1 (let ((k (let ((i o) (d l) (p (add1 (let ((y (- w o)) (w (let ((m d)) w)) (b -100)) w))) (z (let ((h -69) (w (- (* -53 40) (add1 i)))) i)) (n (add1 (sub1 (sub1 l))))) (let ((a -20) (x (add1 -13)) (p (+ 57 (sub1 34))) (i p) (v (add1 (- -16 z)))) (let ((a (* 19 w))) -5))))) l)))) -5) (+ (let ((p (let ((b (+ (add1 (add1 (let ((y -23) (r -46)) 4))) w)) (x (- (* (* (let ((s 26) (b -18)) s) -54) (- (sub1 -47) (- 85 w))) (sub1 (- (add1 o) (sub1 b))))) (j (* (+ 32 -9) (let ((i (sub1 (let ((j 3) (h x) (o -27)) j))) (y (- (* -70 4) i)) (q (let ((w (sub1 x)) (o (sub1 x)) (u (sub1 y)) (h (let ((h -19) (w h) (u i) (d -46)) i))) (+ h o))) (t (* 21 (* -21 b)))) (add1 -95)))) (s x)) (add1 b))) (a o)) (* (let ((s (let ((u (let ((b (let ((d a) (p w) (j p)) 94)) (l (sub1 12)) (k (sub1 29))) (let ((a -87) (f o)) 7))) (r (sub1 (- 17 -4))) (l (+ (let ((v 85)) u) (add1 w))) (m (+ -86 (add1 -70))) (o (+ (- -55 -5) 8))) (+ 1 (- 72 u)))) (f (sub1 (+ (let ((m o) (i 90)) -92) (let ((r a)) r)))) (d -24)) 5) (let ((f (sub1 (add1 (sub1 -55)))) (d 26)) -27))) (add1 o)))) (h k) (w (- (* (* (+ (- (sub1 (* (sub1 99) w)) (+ (+ (add1 15) (+ o h)) h)) k) (add1 (sub1 -42))) -61) (add1 (add1 (- (* 97 (let ((o (add1 (+ k o))) (t w) (k (+ (sub1 w) (- 51 w)))) (sub1 69))) (let ((q (sub1 (let ((h h)) (+ -34 o)))) (w 53)) 67))))))) (add1 (+ (sub1 (- (add1 (add1 (- 44 o))) (+ -28 (+ (- h (sub1 -93)) (+ (+ w -96) (sub1 -96)))))) (sub1 w)))) (- (+ (sub1 19) o) (* (* (sub1 (add1 (sub1 -43))) -13) (* (let ((w w) (z (add1 (add1 (add1 (+ o (- 94 -88)))))) (u z)) (+ (let ((w (+ (sub1 (- -80 -2)) (* 62 6))) (p (let ((q (let ((e (sub1 17))) (- z w)))) (- (let ((e o) (d -74) (y -31) (w d) (h o)) 44) q))) (t (sub1 (sub1 (let ((j z)) w)))) (n u) (r (+ (- (add1 p) -33) (- (+ -28 z) (sub1 t))))) (+ (* (sub1 -26) (+ -19 80)) (- (sub1 t) 43))) (add1 -36))) (add1 w))))))) (z (sub1 (let ((h o)) (- (+ 73 (sub1 (add1 (* (- 85 (let ((z (add1 (+ 96 d))) (l (* -7 (add1 -90))) (t (add1 (- -44 -84))) (u (sub1 (sub1 d))) (m u)) (let ((v (- l -1)) (j (add1 81)) (c (sub1 -82)) (b u) (g h)) 92))) (add1 (* 58 (* d (- o h)))))))) (add1 (let ((h h)) d)))))) (s (- o (sub1 (- o 4))))) (+ (- (let ((m (sub1 24)) (n s) (r (+ (* m (sub1 (let ((m 36) (n (sub1 (add1 z))) (x (sub1 (let ((w 52) (f 16) (g -21) (u (- (sub1 m) -40))) 69))) (c -4) (q -34)) (+ q 30)))) n)) (l (* (add1 (add1 -93)) (let ((u (let ((f (add1 (- (+ -33 (add1 (let ((b z) (k z) (s d) (i 7)) s))) (add1 94)))) (g (+ (add1 (* (add1 (sub1 w)) (add1 (+ s 7)))) 62)) (z (- 83 56)) (p (let ((k -47) (c o)) d))) (let ((h (add1 (+ (* (sub1 58) (- 43 -8)) (let ((j (add1 z)) (g (+ -84 w)) (b (* 74 n))) (- 10 91)))))) (sub1 (* m (* (+ w 39) 70)))))) (m o) (h (add1 -59)) (w (let ((w (let ((s (+ d n)) (k (add1 (let ((e (+ (sub1 -33) (let ((n 5) (h -71)) s))) (r (+ (add1 w) (+ -32 w)))) (- (* r 96) e))))) k))) (+ z (let ((r (let ((g (sub1 (- -47 83))) (k (- (add1 -92) (let ((w -10) (r m)) d))) (l (* (* g 61) (- -54 -16))) (z (- (sub1 73) (add1 59)))) (- h (+ 23 r)))) (j (- (add1 h) h)) (f (sub1 (+ r (+ -49 21)))) (g -67)) (- (- (- g u) (sub1 -83)) n)))))) (let ((b (- (+ s (sub1 -13)) (+ (* (let ((k (+ h h)) (s (add1 u)) (n (sub1 -35)) (b (let ((d m) (i 89)) -57))) 93) u) 74)))) (sub1 67)))))) m) d) d))))