(+ (+ (sub1 (- (let ((i (let ((o 42) (n 96) (a o)) -47)) (p 88)) (- (add1 p) (- (sub1 p) (let ((q p) (b (* i 84)) (r q) (a 18)) p)))) 4)) (sub1 (add1 (+ (* (let ((c (* 87 (sub1 -82)))) (- (sub1 (sub1 (let ((y (* (+ (add1 c) (* 38 -85)) -34)) (d 7)) (* (sub1 (let ((v d) (n v) (r -32) (q 50) (e y)) -34)) d)))) (- c (- 26 (add1 (let ((j (add1 (+ c 99))) (v (* (- -26 54) (- j c))) (z (sub1 (- -32 v))) (w (sub1 (let ((o -61)) c)))) (- (let ((l 61) (s v)) -100) (add1 w)))))))) (- (add1 11) (let ((m (* (- 59 (sub1 (add1 (add1 (+ -48 -41))))) (add1 (* (- -13 (let ((b (+ 2 -58)) (i (+ b b))) (sub1 57))) (- (+ -51 (sub1 45)) (- (- 20 97) (let ((t 39) (r 2) (s t)) -31))))))) (p m) (e (sub1 (- m (+ (let ((u (- (add1 p) (sub1 p))) (m p) (i (+ (sub1 u) -72)) (r p)) (let ((v (+ -82 m))) (- -42 p))) (- (+ (add1 m) p) (+ (+ -3 m) -94))))))) (sub1 (let ((q (let ((j (- (- (sub1 p) (sub1 -97)) (sub1 (+ p p))))) (+ 46 (* (sub1 p) (add1 8))))) (s (let ((z (sub1 (- (- 62 97) (- e -73)))) (l (- (+ (+ -87 77) (- -53 -56)) (let ((f (- 95 z)) (y q) (z -74)) p)))) (sub1 m))) (i (+ (sub1 (- -99 -73)) (let ((f -48)) (sub1 (add1 e)))))) (add1 (- (+ (- 18 i) (let ((i p) (q 71) (f 28)) e)) (+ (sub1 -92) (- e e))))))))) (* (+ (let ((c (let ((e (* (sub1 (* (* (* -38 25) (let ((g -82)) g)) 67)) -83)) (w (- (add1 -35) (+ (add1 -2) (add1 (+ (let ((t -22) (h -91) (k 31)) 83) (- e e))))))) (- (+ (let ((i (sub1 (sub1 e))) (v (add1 (+ 21 15))) (l e)) (+ (add1 -63) (- 95 -22))) (+ (* (let ((d -36) (i e) (o -78) (v d)) -32) (let ((r 51) (u e)) -40)) e)) w))) (d 0)) (let ((g (add1 (let ((d c) (b (let ((f -84) (a (- 30 d))) (add1 (+ c c))))) (add1 (sub1 (+ 64 50)))))) (f 23) (q (sub1 (- (let ((k (- (+ -92 -50) 17)) (j (- (let ((l g)) f) g))) 76) 11))) (b (- (- (- (sub1 c) 65) (- (+ (sub1 81) d) (sub1 14))) (+ f (sub1 (* 33 -6))))) (w (add1 (- (- (add1 (sub1 -4)) (- (let ((t 38) (o q) (z 20) (a d)) c) (+ d f))) q)))) 87)) -84) (- (add1 (+ (- (sub1 17) (let ((e (* (let ((f (sub1 -86)) (r f) (t (let ((w f) (i -66)) f)) (k (- f f)) (x -11)) -77) (+ 56 (let ((z 9) (d 91) (v 90) (c z)) z)))) (i (let ((b e) (o (+ -99 (* e b)))) (sub1 (add1 45))))) (* (- (add1 i) (let ((i 59) (p 21) (y -21) (d -46) (n -91)) p)) -61))) (+ (- (add1 (let ((o (sub1 100))) (+ o -14))) (let ((q (- 90 (- 50 83))) (b (sub1 (sub1 40))) (m (sub1 (let ((z b) (h 38) (m -16)) q))) (i (* (* m 0) (+ m b)))) m)) (- (let ((s 52) (f 38)) (+ (+ -90 f) 70)) (add1 (* (- 53 -64) (+ 75 -57))))))) 3)))))) (+ (add1 (+ (sub1 (let ((c (let ((o (+ -98 (let ((y (+ (+ (add1 (let ((z (sub1 12)) (u (sub1 26)) (v u)) (add1 18))) -10) (+ -41 -98))) (z (- (sub1 (add1 (sub1 -48))) y)) (w (sub1 (+ (let ((g (- 29 (sub1 -82)))) (sub1 y)) (+ (let ((l (+ -89 z)) (y y) (h 4) (v (* 64 1)) (s (- -82 h))) (* y 22)) (sub1 (let ((v z) (g y)) -100)))))) (b (- (* (* (- (let ((k 62) (a y) (g 26)) -3) (+ y y)) (sub1 z)) (sub1 (let ((b (let ((z z) (h -83)) 88)) (u 46) (f 64) (v (- -9 -99)) (s (- z -62))) z))) (- (- (* (add1 57) -28) (+ (* w z) (let ((f z)) 1))) -41)))) (add1 (- (let ((w (let ((l (sub1 b)) (q 77) (f (let ((o -77)) o)) (c (let ((w -54) (y 10)) -75))) (let ((l 33)) y)))) (+ b y)) (- (add1 (+ y b)) (* (let ((m 81)) 92) (+ 22 -83)))))))) (k (- (let ((s (sub1 (+ (sub1 68) o))) (p (let ((f (add1 (sub1 (let ((e (let ((i -29)) s)) (v (sub1 87))) (let ((x 79) (d 72) (c 88) (n -68) (l 62)) -88))))) (a (sub1 (let ((e (* (* o -38) (+ -90 28))) (w e)) (+ 4 (sub1 s))))) (b 74) (r -12)) (add1 (* (* (* a 56) (add1 96)) r)))) (f 66) (z (let ((c (sub1 (- -60 (add1 o)))) (n (sub1 (add1 (sub1 c)))) (v (- (- (let ((s (add1 7)) (c (* 28 -7))) (- f f)) -2) (add1 (- (let ((s p)) o) (sub1 p))))) (x (sub1 12)) (p (- (- (add1 (sub1 83)) (add1 (- o v))) (let ((g (let ((d (sub1 5)) (c (let ((u c) (r -75) (w 36)) u)) (j v) (e (let ((x 68) (j c)) -49))) (+ -66 x))) (e (let ((v (add1 -38)) (b (sub1 -92)) (l (add1 -80))) (+ v -5))) (f (sub1 (+ v x))) (m (+ (* e n) (add1 f)))) (- (+ c v) (- 10 -29)))))) (let ((f (+ (sub1 (+ 37 46)) (+ (sub1 -13) (let ((t v) (e c) (k p) (z -39)) 16))))) (sub1 (let ((l c) (y (let ((d l) (j -37) (b 6) (v -23)) c))) (add1 15)))))) (q (- (add1 (* (add1 o) 36)) f))) (+ (let ((d (+ (* z (sub1 s)) (add1 (+ q 10)))) (c (* (sub1 (sub1 o)) f))) (add1 (let ((w (- p 13))) (+ f 19)))) -72)) (sub1 65)))) 95))) (+ (let ((r (+ -91 -62)) (c (* (let ((c (let ((o r) (v 54) (g (sub1 (add1 r)))) (- v (let ((g r)) (- o 32))))) (j (- (let ((t (let ((x (+ 84 r)) (u (add1 -63)) (p (let ((u r) (w 33)) -100)) (z (sub1 u)) (h (add1 r))) (let ((n c) (c h)) -88)))) (* 30 (let ((t -49) (p c) (z -97) (d c)) 1))) r))) (add1 (let ((p (- (sub1 r) (* -17 r)))) (let ((g (let ((f 62) (w 93)) j)) (w (let ((r 83) (v -55) (x p)) -4))) (let ((k r) (g k) (l -83) (u 36) (b -31)) l))))) (sub1 c))) (a 24) (l (+ (add1 (sub1 a)) (+ (let ((v c)) (- (let ((v (sub1 r)) (b (* v -20)) (q (sub1 c)) (z (+ a -56))) a) v)) (sub1 c))))) (+ (+ (- (sub1 45) l) (add1 (+ (* (* r 22) -65) -36))) (let ((f (* r r)) (v (sub1 r)) (a (add1 (- (- (* l 44) (* -82 9)) (* (* -80 -67) (* v 17))))) (c (+ (* (- (+ 63 61) (sub1 -71)) v) (- (+ (sub1 -93) (+ -41 -63)) -60)))) f))) c))) 98)) (+ (+ (add1 (- -53 (let ((e (let ((i (let ((c 85) (t (+ (* (* (let ((i (sub1 -95))) 81) (* (sub1 44) (add1 -31))) (+ (add1 c) (* (sub1 62) (let ((y c) (i c)) y)))) (- (add1 (let ((l (* c -26)) (c -33)) (add1 7))) c)))) -91))) (add1 (sub1 (- (- i (add1 21)) -62))))) (l (- (* (let ((e -92)) (+ (add1 (- (- -83 e) (- -98 e))) (* (+ -85 e) (add1 (let ((z 18) (s 57) (a e)) 92))))) 67) e)) (i (* (sub1 (let ((n (sub1 -88))) (- (add1 (- (let ((z -29) (k z)) z) 29)) (let ((h (- (+ l -63) -57))) l)))) (add1 (* (let ((l (+ -47 (add1 -85)))) -96) (- (add1 (sub1 (- e 56))) -100))))) (z e)) (sub1 z)))) -95) (- (let ((e (* (add1 (* (* -1 38) (+ (sub1 (- (* (sub1 (- -90 -95)) (sub1 (add1 11))) (add1 (* (+ 69 94) (sub1 -96))))) (add1 (sub1 -83))))) (+ (add1 (+ (add1 (sub1 (- (- 14 (+ 83 -76)) 40))) (let ((u (let ((c (add1 (* (sub1 -62) (- -92 27)))) (w (sub1 (+ (let ((h 5) (z c) (l -12) (u c)) -25) c))) (q c) (e (+ q q)) (u (- w (+ (+ -27 c) -85)))) -22)) (x (let ((o (add1 (sub1 (- -73 -15)))) (n (add1 -7))) (* (add1 (sub1 u)) (sub1 (add1 n))))) (a (- x (- (let ((k u) (y (* 0 u))) (- y y)) (let ((i (* x x)) (c (* u 48))) 63))))) (add1 (+ -91 (- a (sub1 x))))))) (let ((h (sub1 (add1 (sub1 -22)))) (k (- (- (let ((e h)) (- (sub1 (+ -9 h)) 2)) (sub1 (sub1 h))) h))) (add1 h))))) (v e)) (+ (sub1 (add1 (sub1 e))) (add1 -70))) (- -21 (- -39 (add1 -98)))))))