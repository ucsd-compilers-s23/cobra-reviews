(- (* -77 (sub1 (* (let ((z (* (add1 0) (- (+ 88 (- (+ (* (- -54 (* -69 -39)) (+ -61 (sub1 0))) (add1 (let ((z (+ -30 69)) (b (- z z)) (w (- b b)) (v (sub1 w))) w))) (let ((j (* (sub1 (add1 -96)) (* (add1 -52) (let ((k -43) (x k)) 64)))) (a (let ((x (sub1 (+ -71 j))) (h x)) (* (- x x) j))) (w -91) (d -11) (g j)) (- (let ((p (add1 60)) (t (add1 g)) (y w)) -68) (- (- -78 w) (+ 66 28)))))) (* (+ (* (+ (* (+ 76 -72) (add1 -51)) (* 70 (sub1 -74))) (add1 (add1 (+ 40 57)))) (add1 (let ((x -84) (i (* (* -42 x) x)) (k (- (+ 2 -12) (sub1 x))) (o (let ((s 36) (h (let ((f s) (u 11) (p -24) (o 29)) p)) (c 56) (u (+ s -79))) (let ((s k) (e k) (c -8) (w -95) (a c)) -50)))) (- (add1 -33) (let ((u x) (s k) (n u) (d i) (q s)) n))))) (sub1 (let ((a (let ((y (add1 -98)) (k (add1 (+ 69 y))) (q (- (add1 k) y))) (+ (add1 q) (add1 55)))) (n (let ((x (* (add1 a) (* -65 42))) (f x) (o (* x (* -70 -43))) (z (sub1 -56))) 25))) (add1 (- n (sub1 n))))))))) (o (sub1 z)) (l o)) -96) -93))) -77)