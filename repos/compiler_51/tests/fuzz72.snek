(let ((n (+ (add1 (* (add1 17) (- (- (- (* (+ (let ((u -39) (j u) (f (* u j))) u) (let ((l (* 11 -17)) (y 72) (b (- -74 -63))) (* 95 y))) (let ((t (add1 (+ 7 -79))) (u (* (* 6 t) t))) (let ((d (sub1 15)) (g -79) (k (let ((g 64) (u -87)) -17)) (u (add1 -30))) (- d 99)))) (* (+ (add1 (add1 94)) (+ (- -18 89) (* 75 98))) (sub1 (add1 (add1 -72))))) (+ (let ((n (- (- (add1 83) -47) (let ((d 19) (n -76)) (let ((w n)) n)))) (i n) (l (+ n n)) (q (add1 (sub1 66))) (o q)) o) (sub1 (sub1 (+ (+ -12 5) (* -74 91)))))) (let ((h (sub1 (+ (* (sub1 (* -47 -88)) (let ((j (let ((o -45) (c 88)) o)) (f (* -84 -83))) (+ 57 13))) 57)))) (add1 7))))) (* (- (sub1 (let ((u (* (add1 -81) 56))) u)) (sub1 (- -88 (+ (let ((j (+ (- (- -95 40) (+ 20 -66)) (* (add1 88) -58)))) (+ (add1 (let ((i 25) (q i) (r i)) r)) (+ (sub1 46) (+ 41 -35)))) (- (add1 (let ((k (sub1 -81)) (v (- 86 k)) (h k)) (let ((g h) (u h)) g))) (sub1 (sub1 (+ 79 -70)))))))) (+ (* (let ((x (- 22 (add1 (add1 (sub1 (add1 12)))))) (s (- (sub1 (- x (add1 (+ x x)))) (+ x (* (let ((n (* x 58))) (* -39 -35)) (- (- -87 x) (add1 53)))))) (c x) (i (let ((v (add1 (+ 13 (add1 (sub1 s))))) (s -8) (c 0) (q c) (x x)) (sub1 (- (let ((q (- -82 v)) (k (let ((w -22) (f c) (j f) (h s)) j)) (m (+ 66 -83)) (y (sub1 v))) (add1 39)) (sub1 (+ c x)))))) (e s)) (let ((c (sub1 s)) (t s)) -9)) (add1 41)) (add1 44)))))) (let ((e -58) (w (sub1 e))) (- (- (* 74 (- (add1 (let ((f (sub1 75)) (m 70) (w 53) (n (* (* (add1 w) (- -7 m)) 87)) (o e)) e)) (+ (+ (add1 -70) (let ((h (add1 (- e w))) (i (add1 (* 9 w))) (v (- (sub1 n) (add1 -32)))) (let ((d (sub1 v)) (c (* -96 w))) (+ -59 1)))) (+ (+ (+ -61 (- e -10)) (add1 (- 18 -62))) (sub1 (add1 (let ((u w) (r -75) (x 2) (w x) (n 35)) w))))))) (sub1 (add1 -20))) (let ((x e) (n x)) (add1 (* 17 (let ((i 68) (w (+ -54 (sub1 13))) (e (add1 (* (* n (sub1 i)) w))) (a 89)) (+ (sub1 (let ((r (sub1 -22)) (y r) (o (sub1 e))) (sub1 74))) (* (* (+ -18 i) (let ((s 16) (d 60)) 1)) (sub1 -22))))))))))