(+ (let ((w (- (add1 (add1 (add1 (+ (- (let ((b (* (sub1 (sub1 28)) 95)) (g (- (* 29 (* 52 -90)) b))) (sub1 (add1 b))) (add1 (let ((m (sub1 (+ -13 2))) (d (add1 (let ((d m)) d))) (k (let ((a (add1 m)) (k (* d a))) (sub1 k))) (r 36)) (let ((c k) (o (- 58 d))) (sub1 r))))) (- (- (let ((f (- -7 (add1 -65))) (h (- f -67)) (k (+ (* f -1) (- -16 0))) (w (add1 1))) (- (add1 f) (+ -67 65))) (- (sub1 59) -45)) 51))))) (let ((z (add1 -64))) (+ (let ((t (sub1 (+ (let ((y (+ (* (+ -72 0) -88) (- -66 (* z z)))) (o (sub1 (sub1 (let ((k y)) y))))) (add1 z)) 61)))) t) (+ (+ (add1 (sub1 (sub1 (+ (- z 52) (+ -69 z))))) -20) (- (- -40 (- z (let ((r (* -25 (* 93 z))) (n -67) (a (add1 (+ -7 z)))) n))) (add1 -83))))))) (k (let ((c w) (m (+ (+ (+ (* (- (sub1 (+ (* (- c c) (+ -56 c)) (- (sub1 -99) -2))) (* (+ (- (let ((v 6) (b c) (l v)) -61) (let ((j c) (i -64) (c -49)) i)) 31) (add1 (+ (* 86 15) -38)))) (- (add1 59) (sub1 (sub1 (let ((q (- -56 77)) (u (+ 38 -93))) (sub1 -46)))))) (sub1 49)) (- c (* (* (let ((k (sub1 w)) (e (+ (- (sub1 -24) (+ 18 -10)) (- (* k 46) (+ k 46)))) (r (sub1 -14))) -65) (- -57 (sub1 (sub1 (let ((z -77)) z))))) (let ((q 19) (i (add1 (sub1 (let ((h q)) (* h h))))) (t (* (+ (+ q i) (sub1 (let ((a 55) (q a)) a))) (sub1 i)))) (let ((u (add1 (let ((a (- c i)) (x (* t -75)) (u (* 79 -2)) (l (- 51 68))) a))) (y t)) i))))) (let ((y (+ (+ (sub1 (- 7 (let ((e (let ((u c) (p -62)) (let ((p -91) (v u)) v))) (o (* 71 (sub1 c)))) (+ (sub1 60) (* o e))))) (add1 w)) 61)) (e (+ y w)) (m (- c 66))) (* 2 (- -70 16))))) (e (let ((p (let ((r (add1 (sub1 (- (sub1 (* -38 (+ 7 (add1 -14)))) (+ (* 24 (* (add1 96) (let ((d c) (k 74)) d))) -9))))) (e (let ((q (* (add1 (sub1 (sub1 (sub1 -21)))) (+ (add1 w) (sub1 m))))) (* 66 c))) (m (add1 (+ -50 (- (add1 (- (- (sub1 -84) (- -66 r)) (add1 (* -70 e)))) m)))) (t (+ (sub1 r) (sub1 r))) (h r)) -14)) (y -59)) (let ((q p)) q))) (a (sub1 c))) (sub1 (sub1 (- (add1 (* (let ((g (+ (- (+ a 63) (let ((v -24) (o -94) (m 40) (i w)) 90)) (+ (+ 86 100) (sub1 m)))) (c (- (* (let ((r -24) (h r)) -41) m) (+ (sub1 g) m))) (s (* (sub1 (add1 -9)) w)) (z (sub1 (* -26 49)))) (+ (sub1 (add1 z)) (- (- 31 -87) (+ -85 85)))) w)) (sub1 (add1 (- (* (- (let ((z 24)) 40) (* -89 a)) (+ (- c e) 4)) -64)))))))) (c (- (add1 (add1 k)) (sub1 (let ((a -87) (m (let ((b (- (+ (+ 72 (+ (let ((j w) (x (sub1 -94))) (- j -74)) (+ k (+ -96 2)))) (- (add1 (add1 (let ((e -92) (i k)) -53))) (let ((l (- (let ((d -81)) 94) (add1 a)))) (sub1 (add1 47))))) w)) (f (add1 (let ((f k) (q (let ((x (sub1 (+ (- a -45) (sub1 28)))) (t (- (sub1 (sub1 b)) -56))) (sub1 (- (- -32 90) 86)))) (m (+ (add1 (- (* q -30) (+ 59 k))) (+ (- a (let ((m -32) (l m) (k a) (s b)) 58)) (- (- w b) (+ -37 f)))))) (+ (let ((o (- (- q -14) (add1 k))) (y (+ (add1 -26) (add1 o))) (i (let ((d a) (k (sub1 68)) (p (sub1 y))) (+ b 5)))) m) (let ((s (add1 b)) (p q) (u (add1 k))) (- (add1 k) -38))))))) 27))) (add1 (* (let ((b -76) (p (sub1 (- (* 42 (let ((x -67) (i -27) (s i) (g 51)) s)) (- (let ((u -1) (i a) (e k)) 53) m)))) (w (let ((z (add1 (- (sub1 70) k))) (s (- (- (sub1 w) (- p 5)) (add1 (add1 k)))) (u w) (j z) (a a)) (+ -71 (- (add1 j) 94)))) (f k)) (add1 (add1 (sub1 (sub1 21))))) (- (* (add1 (sub1 a)) 44) (sub1 w)))))))) (m k) (j (* (add1 -82) (sub1 w)))) (- -28 w)) -21)